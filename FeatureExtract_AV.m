%% PEMILIHAN FILE CITRA AVRDB
clear; close all;
%%
% Membaca/input citra mentah dan vessel segmentasi (pilih file)
[fnameRAW, pnameRAW] = uigetfile('*.JPG','Please select RAW IMAGE(s)', 'MultiSelect', 'on');
fullnameRAW = strcat(pnameRAW,fnameRAW);
n_RAW = length(fullnameRAW);
%%
% Baca citra GT ARTERY & VEIN
[fnameARTERI, pnameARTERI] = uigetfile('*.jpg','Please select ARTERY IMAGE(s)', 'MultiSelect', 'on');
fullnameARTERI = strcat(pnameARTERI,fnameARTERI);
%%
[fnameVENA, pnameVENA] = uigetfile('*.jpg','Please select VEIN IMAGE(s)', 'MultiSelect', 'on');
fullnameVENA = strcat(pnameVENA,fnameVENA);
%%
% Baca citra MASK
[fnameMASK, pnameMASK] = uigetfile({'*.tif'},'Please select MASK IMAGE(s)', 'MultiSelect', 'on');
fullnameMASK = strcat(pnameMASK,fnameMASK);
%%
% Baca file ROI
[fnameROI, pnameROI] = uigetfile({'*.mat'},'Please select ROI file(s)', 'MultiSelect', 'on');
fullnameROI = strcat(pnameROI,fnameROI);
%%
% Baca Hasil Segmentasi
[fnameSEG, pnameSEG] = uigetfile('*.tiff','Please select HASIL VESSEL SEGMENTATION file(s)', 'MultiSelect', 'on');
fullnameSEG = strcat(pnameSEG,fnameSEG);
%%
% SKELETON Telea
[fnameSKEL, pnameSKEL] = uigetfile('*.png','Select SKELETON Telea image(s)', 'MultiSelect', 'on');
fullnameSKEL = strcat(pnameSKEL,fnameSKEL);

%% AVRDB
All_data = []; All_fname = []; All_GT = [];
for h=1:5
    h
    % Membaca/input citra mentah dan ekstraksi kanal RGB
    rgbImage = imread(cell2mat(fullnameRAW(h))); 
    RGB_R = rgbImage(:,:,1);
    RGB_G = rgbImage(:,:,2); 
    RGB_B = rgbImage(:,:,3);
    RGB_RG = double(RGB_R).^2 + double(RGB_G).^2;
    RGB_RG = sqrt(0.5*RGB_RG);
    [row col] = size(RGB_G);
    [counts,binLocations] = imhist(RGB_R);
    B = 150/find(max(counts(100:end))==counts); RGB_R_Norm = RGB_R*B(1); RGB_R = RGB_R_Norm;
    [counts,binLocations] = imhist(RGB_G);
    B = 125/find(max(counts(50:end))==counts); RGB_G_Norm = RGB_G*B(1); RGB_G = RGB_G_Norm;
    [counts,binLocations] = imhist(RGB_B);
    B = 75/find(max(counts(10:150))==counts); RGB_B_Norm = RGB_B*B(1); RGB_B = RGB_B_Norm;
    rgbImage2 = cat(3, RGB_R_Norm, RGB_G_Norm, RGB_B_Norm);

    % Membaca ground truth arteri-vena
    arteriImage = imread(cell2mat(fullnameARTERI(h)));
    arteriImage = arteriImage(:,:,2);
    venaImage = imread(cell2mat(fullnameVENA(h)));
    venaImage = venaImage(:,:,2);

    % Ekstraksi kanal LAB
    LAB = rgb2lab(rgbImage2);
    LAB_L = LAB(:,:,1);
    LAB_A = LAB(:,:,2);
    LAB_B = LAB(:,:,3);
    % Ekstraksi kanal HSV
    HSV = rgb2hsv(rgbImage2);
    HSV_H = HSV(:,:,1);
    HSV_S = HSV(:,:,2);
    HSV_V = HSV(:,:,3);
    % Ekstraksi kanal YCbCr
    YCbCr = rgb2ycbcr(rgbImage2);
    YCbCr_Y = YCbCr(:,:,1);
    %YCbCr_Cb = YCbCr(:,:,2);
    YCbCr_Cr = YCbCr(:,:,3);
    % Ekstraksi kanal CMYK
    RGBtoCMYK = makecform('srgb2cmyk');
    CMYK = applycform(rgbImage2,RGBtoCMYK);
    CMYK_M = CMYK(:,:,2);

    % Normalization
    window = ones(3,3)/9; 
    Norm_RGB_R = double(RGB_R); 
    Norm_RGB_G = double(RGB_G); 
    Norm_RGB_B = double(RGB_B); 
    Norm_RGB_RG = double(RGB_RG);
    Norm_LAB_L = double(LAB_L);  
    Norm_LAB_A = double(LAB_A);  
    Norm_LAB_B = double(LAB_B); 
    Norm_HSV_H = double(HSV_H);
    Norm_HSV_S = double(HSV_S);
    Norm_HSV_V = double(HSV_V);
    Norm_YCbCr_Y = double(YCbCr_Y);
    Norm_YCbCr_Cr = double(YCbCr_Cr); 
    Norm_CMYK_M = double(CMYK_M);   
    % Gradien Magnitude
    [Gmag_RGB_R, Gdir] = imgradient(RGB_R); [Gmag_RGB_G, Gdir] = imgradient(RGB_G); [Gmag_RGB_B, Gdir] = imgradient(RGB_B); [Gmag_RGB_RG, Gdir] = imgradient(RGB_RG);
    [Gmag_LAB_L, Gdir] = imgradient(LAB_L); [Gmag_LAB_A, Gdir] = imgradient(LAB_A); [Gmag_LAB_B, Gdir] = imgradient(LAB_B);
    [Gmag_HSV_H, Gdir] = imgradient(HSV_H); [Gmag_HSV_S, Gdir] = imgradient(HSV_S); [Gmag_HSV_V, Gdir] = imgradient(HSV_V);
    [Gmag_YCbCr_Y, Gdir] = imgradient(YCbCr_Y); [Gmag_YCbCr_Cr, Gdir] = imgradient(YCbCr_Cr); [Gmag_CMYK_M, Gdir] = imgradient(CMYK_M);

    % Buka ROI dan Masking
    OD = open(cell2mat(fullnameROI(h)));
    pinggiran = imread(cell2mat(fullnameMASK(h)));
    BW = imread(cell2mat(fullnameSEG(h)));
    % Ekstraksi ROI
    ROI = zeros(row,col);
    ROI = logical(ROI);
    for i=1:row
        for j=1:col
            d_OD = sqrt((i-OD.X)^2+(j-OD.Y)^2);
            if (d_OD > 2*OD.radius) && (d_OD < 3*OD.radius) % -------->>> GANTI ROI
                ROI(i,j) = 1;
            end
        end
    end
    BW_final = ROI.*BW;
    
    % Skeletonisasi YUNI
    Skel = bwmorph(BW,'skel',10); 
    Skel = bwmorph(Skel,'spur',13); 
    BW_final_2 = BW_final;    
    Skel_fin = ROI.*Skel; 
    Skel_fin = bwmorph(Skel_fin,'clean',1);
    branch = bwmorph(Skel_fin,'branchpoints',1);
     
    % Skeletonisasi TELEA
%     Skel = imread(cell2mat(fullnameSKEL(h)));
%     Skel_fin = ROI.*Skel;
%     Skel_fin = bwmorph(Skel_fin, 'clean',Inf);
%     BW_final_2 = BW_final;
%     branch = bwmorph(Skel_fin, 'branchpoints',1);
    
    
    [i j] = find(branch==1); A = [];
    for k=1:length(i)
        win = Skel_fin(i(k)-2:i(k)+2,j(k)-2:j(k)+2);
        A = [A; i(k) j(k) sum(win(:))];
        if sum(win(:))<7
            branch(i(k),j(k)) = 0;
        end
        if sum(win(:))>=7
            for m = i(k)-12:i(k)+12
                for n = j(k)-12:j(k)+12
                    cond = sqrt((m-i(k))^2+(n-j(k))^2);
                    if (cond<=12)
                        BW_final_2(m,n) = 0;
                    end
                end
            end
        end
    end

    [Segmen] = DivideSkel(BW_final_2); 
    n_seg = max(Segmen(:,3)); seg = Segmen(:,3);
    segmen_x = Segmen(:,2); segmen_y = Segmen(:,1);
    %
%     f1 = figure();
%     imshow (BW),
%     hold on
    %
    F_pixel = []; F_profSeg = []; Feature = []; GT = []; 
    for i=1:n_seg
        idx = find(seg==i);
        x = segmen_x(idx);
        y = segmen_y(idx);
%         scatter(x, y, 5, 's', 'filled');
%     end

        D_seg = []; vote_vess = [];
        profile_RGB_R = []; profile_RGB_G = []; profile_RGB_B = []; profile_RGB_RG = []; 
        profile_LAB_L = []; profile_LAB_A = []; profile_LAB_B = []; 
        profile_HSV_H = []; profile_HSV_S = []; profile_HSV_V = []; 
        profile_YCbCr_Y = []; profile_YCbCr_Cr = []; profile_CMYK_M = [];
        segment_RGB_R = []; segment_RGB_G = []; segment_RGB_B = []; segment_RGB_RG = []; 
        segment_LAB_L = []; segment_LAB_A = []; segment_LAB_B = []; 
        segment_HSV_H = []; segment_HSV_S = []; segment_HSV_V = []; 
        segment_YCbCr_Y = []; segment_YCbCr_Cr = []; segment_CMYK_M = [];
        gradMag_RGB_R = []; gradMag_RGB_G = []; gradMag_RGB_B = []; gradMag_RGB_RG = []; 
        gradMag_LAB_L = []; gradMag_LAB_A = []; gradMag_LAB_B = []; 
        gradMag_HSV_H = []; gradMag_HSV_S = []; gradMag_HSV_V = []; 
        gradMag_YCbCr_Y = []; gradMag_YCbCr_Cr = []; gradMag_CMYK_M = [];
        for j=1:length(idx)
            segment_RGB_R = [segment_RGB_R, Norm_RGB_R(y(j),x(j))];
            segment_RGB_G = [segment_RGB_G, Norm_RGB_G(y(j),x(j))];
            segment_RGB_B = [segment_RGB_B, Norm_RGB_B(y(j),x(j))];
            segment_RGB_RG = [segment_RGB_RG, Norm_RGB_RG(y(j),x(j))];
            segment_LAB_L = [segment_LAB_L, Norm_LAB_L(y(j),x(j))];
            segment_LAB_A = [segment_LAB_A, Norm_LAB_L(y(j),x(j))];
            segment_LAB_B = [segment_LAB_B, Norm_LAB_L(y(j),x(j))];
            segment_HSV_H = [segment_HSV_H, Norm_HSV_H(y(j),x(j))];
            segment_HSV_S = [segment_HSV_S, Norm_HSV_H(y(j),x(j))];
            segment_HSV_V = [segment_HSV_V, Norm_HSV_H(y(j),x(j))];
            segment_YCbCr_Y = [segment_YCbCr_Y, Norm_YCbCr_Y(y(j),x(j))];
            segment_YCbCr_Cr = [segment_YCbCr_Cr, Norm_YCbCr_Cr(y(j),x(j))];
            segment_CMYK_M = [segment_CMYK_M, Norm_CMYK_M(y(j),x(j))];

            gradMag_RGB_R = [gradMag_RGB_R, Gmag_RGB_R(y(j),x(j))];
            gradMag_RGB_G = [gradMag_RGB_G, Gmag_RGB_G(y(j),x(j))];
            gradMag_RGB_B = [gradMag_RGB_B, Gmag_RGB_B(y(j),x(j))];
            gradMag_RGB_RG = [gradMag_RGB_RG, Gmag_RGB_RG(y(j),x(j))];
            gradMag_LAB_L = [gradMag_LAB_L, Gmag_LAB_L(y(j),x(j))];
            gradMag_LAB_A = [gradMag_LAB_A, Gmag_LAB_L(y(j),x(j))];
            gradMag_LAB_B = [gradMag_LAB_B, Gmag_LAB_L(y(j),x(j))];
            gradMag_HSV_H = [gradMag_HSV_H, Gmag_HSV_H(y(j),x(j))];
            gradMag_HSV_S = [gradMag_HSV_S, Gmag_HSV_H(y(j),x(j))];
            gradMag_HSV_V = [gradMag_HSV_V, Gmag_HSV_H(y(j),x(j))];
            gradMag_YCbCr_Y = [gradMag_YCbCr_Y, Gmag_YCbCr_Y(y(j),x(j))];
            gradMag_YCbCr_Cr = [gradMag_YCbCr_Cr, Gmag_YCbCr_Cr(y(j),x(j))];
            gradMag_CMYK_M = [gradMag_CMYK_M, Gmag_CMYK_M(y(j),x(j))];

            if (Skel(y(j),x(j))==1)
                [grad D] = Calculate_Diameter(BW, y(j), x(j)); 
%                 [A] = Show_Diameter(grad, D, y(j), x(j), BW)
                D_seg = [D_seg; D];
                r_OD = sqrt((y(j)-OD.X)^2+(x(j)-OD.Y)^2)/OD.radius;
                r_Center = sqrt((y(j)-row/2)^2+(x(j)-col/2)^2);
                if (x(j)>OD.Y)
                    theta_OD = atan((y(j)-OD.X)/(x(j)-OD.Y));
                    theta_OD = mod(-theta_OD,2*pi);
                else
                    theta_OD = atan((y(j)-OD.X)/(x(j)-OD.Y));
                    theta_OD = -theta_OD + pi;
                end

                profile_RGB_R = [profile_RGB_R, Norm_RGB_R(y(j),x(j))];
                profile_RGB_G = [profile_RGB_G, Norm_RGB_G(y(j),x(j))];
                profile_RGB_B = [profile_RGB_B, Norm_RGB_B(y(j),x(j))];
                profile_RGB_RG = [profile_RGB_RG, Norm_RGB_RG(y(j),x(j))];
                profile_LAB_L = [profile_LAB_L, Norm_LAB_L(y(j),x(j))];
                profile_LAB_A = [profile_LAB_A, Norm_LAB_L(y(j),x(j))];
                profile_LAB_B = [profile_LAB_B, Norm_LAB_L(y(j),x(j))];
                profile_HSV_H = [profile_HSV_H, Norm_HSV_H(y(j),x(j))];
                profile_HSV_S = [profile_HSV_S, Norm_HSV_H(y(j),x(j))];
                profile_HSV_V = [profile_HSV_V, Norm_HSV_H(y(j),x(j))];
                profile_YCbCr_Y = [profile_YCbCr_Y, Norm_YCbCr_Y(y(j),x(j))];
                profile_YCbCr_Cr = [profile_YCbCr_Cr, Norm_YCbCr_Cr(y(j),x(j))];
                profile_CMYK_M = [profile_CMYK_M, Norm_CMYK_M(y(j),x(j))];

                zone_RGB_R = []; zone_RGB_G = []; zone_RGB_B = []; zone_RGB_RG = []; 
                zone_LAB_L = []; zone_LAB_A = []; zone_LAB_B = []; 
                zone_HSV_H = []; zone_HSV_S = []; zone_HSV_V = []; 
                zone_YCbCr_Y = []; zone_YCbCr_Cr = []; zone_CMYK_M = [];
                zone = ceil(0.25*D);
                for m = y(j)-zone:y(j)+zone
                    for n = x(j)-zone:x(j)+zone
                        if (sqrt((m-y(j))^2+(n-x(j))^2)<=0.25*D)
                            zone_RGB_R = [zone_RGB_R, Norm_RGB_R(m,n)];
                            zone_RGB_G = [zone_RGB_G, Norm_RGB_G(m,n)];
                            zone_RGB_B = [zone_RGB_B, Norm_RGB_B(m,n)];
                            zone_RGB_RG = [zone_RGB_RG, Norm_RGB_RG(m,n)];
                            zone_LAB_L = [zone_LAB_L, Norm_LAB_L(m,n)];
                            zone_LAB_A = [zone_LAB_A, Norm_LAB_L(m,n)];
                            zone_LAB_B = [zone_LAB_B, Norm_LAB_L(m,n)];
                            zone_HSV_H = [zone_HSV_H, Norm_HSV_H(m,n)];
                            zone_HSV_S = [zone_HSV_S, Norm_HSV_H(m,n)];
                            zone_HSV_V = [zone_HSV_V, Norm_HSV_H(m,n)];
                            zone_YCbCr_Y = [zone_YCbCr_Y, Norm_YCbCr_Y(m,n)];
                            zone_YCbCr_Cr = [zone_YCbCr_Cr, Norm_YCbCr_Cr(m,n)];
                            zone_CMYK_M = [zone_CMYK_M, Norm_CMYK_M(m,n)];
                        end
                    end
                end
                zoneA = [mean(zone_RGB_R) std(zone_RGB_R) min(zone_RGB_R) median(zone_RGB_R) max(zone_RGB_R) ...
                    mean(zone_RGB_G) std(zone_RGB_G) min(zone_RGB_G) median(zone_RGB_G) max(zone_RGB_G) ...
                    mean(zone_RGB_B) std(zone_RGB_B) min(zone_RGB_B) median(zone_RGB_B) max(zone_RGB_B) ...
                    mean(zone_RGB_RG) std(zone_RGB_RG) min(zone_RGB_RG) median(zone_RGB_RG) max(zone_RGB_RG) ...
                    mean(zone_LAB_L) std(zone_LAB_L) min(zone_LAB_L) median(zone_LAB_L) max(zone_LAB_L) ...
                    mean(zone_LAB_A) std(zone_LAB_A) min(zone_LAB_A) median(zone_LAB_A) max(zone_LAB_A) ...
                    mean(zone_LAB_B) std(zone_LAB_B) min(zone_LAB_B) median(zone_LAB_B) max(zone_LAB_B) ...
                    mean(zone_HSV_H) std(zone_HSV_H) min(zone_HSV_H) median(zone_HSV_H) max(zone_HSV_H) ...
                    mean(zone_HSV_S) std(zone_HSV_S) min(zone_HSV_S) median(zone_HSV_S) max(zone_HSV_S) ...
                    mean(zone_HSV_V) std(zone_HSV_V) min(zone_HSV_V) median(zone_HSV_V) max(zone_HSV_V) ...
                    mean(zone_YCbCr_Y) std(zone_YCbCr_Y) min(zone_YCbCr_Y) median(zone_YCbCr_Y) max(zone_YCbCr_Y) ...
                    mean(zone_YCbCr_Cr) std(zone_YCbCr_Cr) min(zone_YCbCr_Cr) median(zone_YCbCr_Cr) max(zone_YCbCr_Cr) ...
                    mean(zone_CMYK_M) std(zone_CMYK_M) min(zone_CMYK_M) median(zone_CMYK_M) max(zone_CMYK_M)];
                zone_RGB_R = []; zone_RGB_G = []; zone_RGB_B = []; zone_RGB_RG = []; 
                zone_LAB_L = []; zone_LAB_A = []; zone_LAB_B = []; 
                zone_HSV_H = []; zone_HSV_S = []; zone_HSV_V = []; 
                zone_YCbCr_Y = []; zone_YCbCr_Cr = []; zone_CMYK_M = [];
                zone = ceil(0.5*D);
                for m = y(j)-zone:y(j)+zone
                    for n = x(j)-zone:x(j)+zone
                        if (sqrt((m-y(j))^2+(n-x(j))^2)<=0.5*D)
                            zone_RGB_R = [zone_RGB_R, Norm_RGB_R(m,n)];
                            zone_RGB_G = [zone_RGB_G, Norm_RGB_G(m,n)];
                            zone_RGB_B = [zone_RGB_B, Norm_RGB_B(m,n)];
                            zone_RGB_RG = [zone_RGB_RG, Norm_RGB_RG(m,n)];
                            zone_LAB_L = [zone_LAB_L, Norm_LAB_L(m,n)];
                            zone_LAB_A = [zone_LAB_A, Norm_LAB_L(m,n)];
                            zone_LAB_B = [zone_LAB_B, Norm_LAB_L(m,n)];
                            zone_HSV_H = [zone_HSV_H, Norm_HSV_H(m,n)];
                            zone_HSV_S = [zone_HSV_S, Norm_HSV_H(m,n)];
                            zone_HSV_V = [zone_HSV_V, Norm_HSV_H(m,n)];
                            zone_YCbCr_Y = [zone_YCbCr_Y, Norm_YCbCr_Y(m,n)];
                            zone_YCbCr_Cr = [zone_YCbCr_Cr, Norm_YCbCr_Cr(m,n)];
                            zone_CMYK_M = [zone_CMYK_M, Norm_CMYK_M(m,n)];
                        end
                    end
                end
                zoneB = [mean(zone_RGB_R) std(zone_RGB_R) min(zone_RGB_R) median(zone_RGB_R) max(zone_RGB_R) ...
                    mean(zone_RGB_G) std(zone_RGB_G) min(zone_RGB_G) median(zone_RGB_G) max(zone_RGB_G) ...
                    mean(zone_RGB_B) std(zone_RGB_B) min(zone_RGB_B) median(zone_RGB_B) max(zone_RGB_B) ...
                    mean(zone_RGB_RG) std(zone_RGB_RG) min(zone_RGB_RG) median(zone_RGB_RG) max(zone_RGB_RG) ...
                    mean(zone_LAB_L) std(zone_LAB_L) min(zone_LAB_L) median(zone_LAB_L) max(zone_LAB_L) ...
                    mean(zone_LAB_A) std(zone_LAB_A) min(zone_LAB_A) median(zone_LAB_A) max(zone_LAB_A) ...
                    mean(zone_LAB_B) std(zone_LAB_B) min(zone_LAB_B) median(zone_LAB_B) max(zone_LAB_B) ...
                    mean(zone_HSV_H) std(zone_HSV_H) min(zone_HSV_H) median(zone_HSV_H) max(zone_HSV_H) ...
                    mean(zone_HSV_S) std(zone_HSV_S) min(zone_HSV_S) median(zone_HSV_S) max(zone_HSV_S) ...
                    mean(zone_HSV_V) std(zone_HSV_V) min(zone_HSV_V) median(zone_HSV_V) max(zone_HSV_V) ...
                    mean(zone_YCbCr_Y) std(zone_YCbCr_Y) min(zone_YCbCr_Y) median(zone_YCbCr_Y) max(zone_YCbCr_Y) ...
                    mean(zone_YCbCr_Cr) std(zone_YCbCr_Cr) min(zone_YCbCr_Cr) median(zone_YCbCr_Cr) max(zone_YCbCr_Cr) ...
                    mean(zone_CMYK_M) std(zone_CMYK_M) min(zone_CMYK_M) median(zone_CMYK_M) max(zone_CMYK_M)];
                zone_RGB_R = []; zone_RGB_G = []; zone_RGB_B = []; zone_RGB_RG = []; 
                zone_LAB_L = []; zone_LAB_A = []; zone_LAB_B = []; 
                zone_HSV_H = []; zone_HSV_S = []; zone_HSV_V = []; 
                zone_YCbCr_Y = []; zone_YCbCr_Cr = []; zone_CMYK_M = [];
                zone = ceil(1*D);
                for m = y(j)-zone:y(j)+zone
                    for n = x(j)-zone:x(j)+zone
                        if (sqrt((m-y(j))^2+(n-x(j))^2)<=1*D)
                            zone_RGB_R = [zone_RGB_R, Norm_RGB_R(m,n)];
                            zone_RGB_G = [zone_RGB_G, Norm_RGB_G(m,n)];
                            zone_RGB_B = [zone_RGB_B, Norm_RGB_B(m,n)];
                            zone_RGB_RG = [zone_RGB_RG, Norm_RGB_RG(m,n)];
                            zone_LAB_L = [zone_LAB_L, Norm_LAB_L(m,n)];
                            zone_LAB_A = [zone_LAB_A, Norm_LAB_L(m,n)];
                            zone_LAB_B = [zone_LAB_B, Norm_LAB_L(m,n)];
                            zone_HSV_H = [zone_HSV_H, Norm_HSV_H(m,n)];
                            zone_HSV_S = [zone_HSV_S, Norm_HSV_H(m,n)];
                            zone_HSV_V = [zone_HSV_V, Norm_HSV_H(m,n)];
                            zone_YCbCr_Y = [zone_YCbCr_Y, Norm_YCbCr_Y(m,n)];
                            zone_YCbCr_Cr = [zone_YCbCr_Cr, Norm_YCbCr_Cr(m,n)];
                            zone_CMYK_M = [zone_CMYK_M, Norm_CMYK_M(m,n)];
                        end
                    end
                end
                zoneC = [mean(zone_RGB_R) std(zone_RGB_R) min(zone_RGB_R) median(zone_RGB_R) max(zone_RGB_R) ...
                    mean(zone_RGB_G) std(zone_RGB_G) min(zone_RGB_G) median(zone_RGB_G) max(zone_RGB_G) ...
                    mean(zone_RGB_B) std(zone_RGB_B) min(zone_RGB_B) median(zone_RGB_B) max(zone_RGB_B) ...
                    mean(zone_RGB_RG) std(zone_RGB_RG) min(zone_RGB_RG) median(zone_RGB_RG) max(zone_RGB_RG) ...
                    mean(zone_LAB_L) std(zone_LAB_L) min(zone_LAB_L) median(zone_LAB_L) max(zone_LAB_L) ...
                    mean(zone_LAB_A) std(zone_LAB_A) min(zone_LAB_A) median(zone_LAB_A) max(zone_LAB_A) ...
                    mean(zone_LAB_B) std(zone_LAB_B) min(zone_LAB_B) median(zone_LAB_B) max(zone_LAB_B) ...
                    mean(zone_HSV_H) std(zone_HSV_H) min(zone_HSV_H) median(zone_HSV_H) max(zone_HSV_H) ...
                    mean(zone_HSV_S) std(zone_HSV_S) min(zone_HSV_S) median(zone_HSV_S) max(zone_HSV_S) ...
                    mean(zone_HSV_V) std(zone_HSV_V) min(zone_HSV_V) median(zone_HSV_V) max(zone_HSV_V) ...
                    mean(zone_YCbCr_Y) std(zone_YCbCr_Y) min(zone_YCbCr_Y) median(zone_YCbCr_Y) max(zone_YCbCr_Y) ...
                    mean(zone_YCbCr_Cr) std(zone_YCbCr_Cr) min(zone_YCbCr_Cr) median(zone_YCbCr_Cr) max(zone_YCbCr_Cr) ...
                    mean(zone_CMYK_M) std(zone_CMYK_M) min(zone_CMYK_M) median(zone_CMYK_M) max(zone_CMYK_M)];
            else
                grad = 0; D = 0; r_OD = 0; r_Center = 0; theta_OD = 0;
                zoneA = zeros(1,65); zoneB = zeros(1,65); zoneC = zeros(1,65); 
            end
            if (arteriImage(y(j), x(j)) ~= 255)
                vote_vess = [vote_vess; 1]; % ARTERI
            elseif (venaImage(y(j), x(j)) ~= 255)
                vote_vess = [vote_vess; -1]; % VENA
            else
                vote_vess = [vote_vess; 0]; % NOT BOTH
            end

            if (D~=0)
                F_pixel = [F_pixel; i, y(j), x(j), grad, D, D/OD.radius, r_OD, theta_OD, r_Center/row ...
                    Norm_RGB_R(y(j),x(j)), Norm_RGB_G(y(j),x(j)), Norm_RGB_B(y(j),x(j)), Norm_RGB_RG(y(j),x(j)) ...
                    Norm_LAB_L(y(j),x(j)), Norm_LAB_A(y(j),x(j)), Norm_LAB_B(y(j),x(j)) ...
                    Norm_HSV_H(y(j),x(j)), Norm_HSV_S(y(j),x(j)), Norm_HSV_V(y(j),x(j)) ...
                    Norm_YCbCr_Y(y(j),x(j)), Norm_YCbCr_Cr(y(j),x(j)), Norm_CMYK_M(y(j),x(j)) ...
                    zoneA, zoneB, zoneC ];
            end
        end

        if (length(D_seg)==0)
            profilFeature = zeros(1,65);
        else
            profilFeature = [mean(profile_RGB_R) std(profile_RGB_R) min(profile_RGB_R) median(profile_RGB_R) max(profile_RGB_R) ...
                mean(profile_RGB_G) std(profile_RGB_G) min(profile_RGB_G) median(profile_RGB_G) max(profile_RGB_G) ...
                mean(profile_RGB_B) std(profile_RGB_B) min(profile_RGB_B) median(profile_RGB_B) max(profile_RGB_B) ...
                mean(profile_RGB_RG) std(profile_RGB_RG) min(profile_RGB_RG) median(profile_RGB_RG) max(profile_RGB_RG) ...
                mean(profile_LAB_L) std(profile_LAB_L) min(profile_LAB_L) median(profile_LAB_L) max(profile_LAB_L) ...
                mean(profile_LAB_A) std(profile_LAB_A) min(profile_LAB_A) median(profile_LAB_A) max(profile_LAB_A) ...
                mean(profile_LAB_B) std(profile_LAB_B) min(profile_LAB_B) median(profile_LAB_B) max(profile_LAB_B) ...
                mean(profile_HSV_H) std(profile_HSV_H) min(profile_HSV_H) median(profile_HSV_H) max(profile_HSV_H) ...
                mean(profile_HSV_S) std(profile_HSV_S) min(profile_HSV_S) median(profile_HSV_S) max(profile_HSV_S) ...
                mean(profile_HSV_V) std(profile_HSV_V) min(profile_HSV_V) median(profile_HSV_V) max(profile_HSV_V) ...
                mean(profile_YCbCr_Y) std(profile_YCbCr_Y) min(profile_YCbCr_Y) median(profile_YCbCr_Y) max(profile_YCbCr_Y) ...
                mean(profile_YCbCr_Cr) std(profile_YCbCr_Cr) min(profile_YCbCr_Cr) median(profile_YCbCr_Cr) max(profile_YCbCr_Cr) ...
                mean(profile_CMYK_M) std(profile_CMYK_M) min(profile_CMYK_M) median(profile_CMYK_M) max(profile_CMYK_M)];
        end
        segmentFeature = [mean(segment_RGB_R) std(segment_RGB_R) min(segment_RGB_R) median(segment_RGB_R) max(segment_RGB_R) ...
            mean(segment_RGB_G) std(segment_RGB_G) min(segment_RGB_G) median(segment_RGB_G) max(segment_RGB_G) ...
            mean(segment_RGB_B) std(segment_RGB_B) min(segment_RGB_B) median(segment_RGB_B) max(segment_RGB_B) ...
            mean(segment_RGB_RG) std(segment_RGB_RG) min(segment_RGB_RG) median(segment_RGB_RG) max(segment_RGB_RG) ...
            mean(segment_LAB_L) std(segment_LAB_L) min(segment_LAB_L) median(segment_LAB_L) max(segment_LAB_L) ...
            mean(segment_LAB_A) std(segment_LAB_A) min(segment_LAB_A) median(segment_LAB_A) max(segment_LAB_A) ...
            mean(segment_LAB_B) std(segment_LAB_B) min(segment_LAB_B) median(segment_LAB_B) max(segment_LAB_B) ...
            mean(segment_HSV_H) std(segment_HSV_H) min(segment_HSV_H) median(segment_HSV_H) max(segment_HSV_H) ...
            mean(segment_HSV_S) std(segment_HSV_S) min(segment_HSV_S) median(segment_HSV_S) max(segment_HSV_S) ...
            mean(segment_HSV_V) std(segment_HSV_V) min(segment_HSV_V) median(segment_HSV_V) max(segment_HSV_V) ...
            mean(segment_YCbCr_Y) std(segment_YCbCr_Y) min(segment_YCbCr_Y) median(segment_YCbCr_Y) max(segment_YCbCr_Y) ...
            mean(segment_YCbCr_Cr) std(segment_YCbCr_Cr) min(segment_YCbCr_Cr) median(segment_YCbCr_Cr) max(segment_YCbCr_Cr) ...
            mean(segment_CMYK_M) std(segment_CMYK_M) min(segment_CMYK_M) median(segment_CMYK_M) max(segment_CMYK_M)];
        gradMagFeature = [mean(gradMag_RGB_R) std(gradMag_RGB_R) min(gradMag_RGB_R) median(gradMag_RGB_R) max(gradMag_RGB_R) ...
            mean(gradMag_RGB_G) std(gradMag_RGB_G) min(gradMag_RGB_G) median(gradMag_RGB_G) max(gradMag_RGB_G) ...
            mean(gradMag_RGB_B) std(gradMag_RGB_B) min(gradMag_RGB_B) median(gradMag_RGB_B) max(gradMag_RGB_B) ...
            mean(gradMag_RGB_RG) std(gradMag_RGB_RG) min(gradMag_RGB_RG) median(gradMag_RGB_RG) max(gradMag_RGB_RG) ...
            mean(gradMag_LAB_L) std(gradMag_LAB_L) min(gradMag_LAB_L) median(gradMag_LAB_L) max(gradMag_LAB_L) ...
            mean(gradMag_LAB_A) std(gradMag_LAB_A) min(gradMag_LAB_A) median(gradMag_LAB_A) max(gradMag_LAB_A) ...
            mean(gradMag_LAB_B) std(gradMag_LAB_B) min(gradMag_LAB_B) median(gradMag_LAB_B) max(gradMag_LAB_B) ...
            mean(gradMag_HSV_H) std(gradMag_HSV_H) min(gradMag_HSV_H) median(gradMag_HSV_H) max(gradMag_HSV_H) ...
            mean(gradMag_HSV_S) std(gradMag_HSV_S) min(gradMag_HSV_S) median(gradMag_HSV_S) max(gradMag_HSV_S) ...
            mean(gradMag_HSV_V) std(gradMag_HSV_V) min(gradMag_HSV_V) median(gradMag_HSV_V) max(gradMag_HSV_V) ...
            mean(gradMag_YCbCr_Y) std(gradMag_YCbCr_Y) min(gradMag_YCbCr_Y) median(gradMag_YCbCr_Y) max(gradMag_YCbCr_Y) ...
            mean(gradMag_YCbCr_Cr) std(gradMag_YCbCr_Cr) min(gradMag_YCbCr_Cr) median(gradMag_YCbCr_Cr) max(gradMag_YCbCr_Cr) ...
            mean(gradMag_CMYK_M) std(gradMag_CMYK_M) min(gradMag_CMYK_M) median(gradMag_CMYK_M) max(gradMag_CMYK_M)];
        profSegFeature = repmat([profilFeature, segmentFeature, gradMagFeature, mean(D_seg)/OD.radius],length(D_seg),1);
        F_profSeg = [F_profSeg; profSegFeature];

        vess = sum(vote_vess);
        if (vess>0)
            GT = [GT; repmat(cellstr('Arteri'), length(D_seg),1)]; % ARTERI
        elseif (vess<0) 
            GT = [GT; repmat(cellstr('Vena'), length(D_seg),1)]; % VENA
        else
            GT = [GT; repmat(cellstr('NB'), length(D_seg),1)]; % Not Both
        end
    end
%     hold off
%     close(f1)

    Feature = [F_pixel, F_profSeg];
    % Masukin fitur ke tabel
    Table_data = array2table(Feature,...
        'VariableNames',{'Segmen','Baris','Kolom','Grad','Diameter','NormD','DistToOD','AngleToOD','DistToCenter' ...
        'Pix_RGB_R','Pix_RGB_G','Pix_RGB_B','Pix_RGB_RG','Pix_LAB_L','Pix_LAB_A','Pix_LAB_B' ...
        'Pix_HSV_H','Pix_HSV_S','Pix_HSV_V','Pix_YCbCr_Y','Pix_YCbCr_Cr','Pix_CMYK_M' ...
        'zoneA_mean_RGB_R', 'zoneA_std_RGB_R', 'zoneA_min_RGB_R', 'zoneA_med_RGB_R', 'zoneA_max_RGB_R' ...
        'zoneA_mean_RGB_G', 'zoneA_std_RGB_G', 'zoneA_min_RGB_G', 'zoneA_med_RGB_G', 'zoneA_max_RGB_G' ...
        'zoneA_mean_RGB_B', 'zoneA_std_RGB_B', 'zoneA_min_RGB_B', 'zoneA_med_RGB_B', 'zoneA_max_RGB_B' ...
        'zoneA_mean_RGB_RG', 'zoneA_std_RGB_RG', 'zoneA_min_RGB_RG', 'zoneA_med_RGB_RG', 'zoneA_max_RGB_RG' ...
        'zoneA_mean_LAB_L', 'zoneA_std_LAB_L', 'zoneA_min_LAB_L', 'zoneA_med_LAB_L', 'zoneA_max_LAB_L' ...
        'zoneA_mean_LAB_A', 'zoneA_std_LAB_A', 'zoneA_min_LAB_A', 'zoneA_med_LAB_A', 'zoneA_max_LAB_A' ...
        'zoneA_mean_LAB_B', 'zoneA_std_LAB_B', 'zoneA_min_LAB_B', 'zoneA_med_LAB_B', 'zoneA_max_LAB_B' ...
        'zoneA_mean_HSV_H', 'zoneA_std_HSV_H', 'zoneA_min_HSV_H', 'zoneA_med_HSV_H', 'zoneA_max_HSV_H' ...
        'zoneA_mean_HSV_S', 'zoneA_std_HSV_S', 'zoneA_min_HSV_S', 'zoneA_med_HSV_S', 'zoneA_max_HSV_S' ...
        'zoneA_mean_HSV_V', 'zoneA_std_HSV_V', 'zoneA_min_HSV_V', 'zoneA_med_HSV_V', 'zoneA_max_HSV_V' ...
        'zoneA_mean_YCbCr_Y', 'zoneA_std_YCbCr_Y', 'zoneA_min_YCbCr_Y', 'zoneA_med_YCbCr_Y', 'zoneA_max_YCbCr_Y' ...
        'zoneA_mean_YCbCr_Cr', 'zoneA_std_YCbCr_Cr', 'zoneA_min_YCbCr_Cr', 'zoneA_med_YCbCr_Cr', 'zoneA_max_YCbCr_Cr' ...
        'zoneA_mean_CMYK_M', 'zoneA_std_CMYK_M', 'zoneA_min_CMYK_M', 'zoneA_med_CMYK_M', 'zoneA_max_CMYK_M' ...
        'zoneB_mean_RGB_R', 'zoneB_std_RGB_R', 'zoneB_min_RGB_R', 'zoneB_med_RGB_R', 'zoneB_max_RGB_R' ...
        'zoneB_mean_RGB_G', 'zoneB_std_RGB_G', 'zoneB_min_RGB_G', 'zoneB_med_RGB_G', 'zoneB_max_RGB_G' ...
        'zoneB_mean_RGB_B', 'zoneB_std_RGB_B', 'zoneB_min_RGB_B', 'zoneB_med_RGB_B', 'zoneB_max_RGB_B' ...
        'zoneB_mean_RGB_RG', 'zoneB_std_RGB_RG', 'zoneB_min_RGB_RG', 'zoneB_med_RGB_RG', 'zoneB_max_RGB_RG' ...
        'zoneB_mean_LAB_L', 'zoneB_std_LAB_L', 'zoneB_min_LAB_L', 'zoneB_med_LAB_L', 'zoneB_max_LAB_L' ...
        'zoneB_mean_LAB_A', 'zoneB_std_LAB_A', 'zoneB_min_LAB_A', 'zoneB_med_LAB_A', 'zoneB_max_LAB_A' ...
        'zoneB_mean_LAB_B', 'zoneB_std_LAB_B', 'zoneB_min_LAB_B', 'zoneB_med_LAB_B', 'zoneB_max_LAB_B' ...
        'zoneB_mean_HSV_H', 'zoneB_std_HSV_H', 'zoneB_min_HSV_H', 'zoneB_med_HSV_H', 'zoneB_max_HSV_H' ...
        'zoneB_mean_HSV_S', 'zoneB_std_HSV_S', 'zoneB_min_HSV_S', 'zoneB_med_HSV_S', 'zoneB_max_HSV_S' ...
        'zoneB_mean_HSV_V', 'zoneB_std_HSV_V', 'zoneB_min_HSV_V', 'zoneB_med_HSV_V', 'zoneB_max_HSV_V' ...
        'zoneB_mean_YCbCr_Y', 'zoneB_std_YCbCr_Y', 'zoneB_min_YCbCr_Y', 'zoneB_med_YCbCr_Y', 'zoneB_max_YCbCr_Y' ...
        'zoneB_mean_YCbCr_Cr', 'zoneB_std_YCbCr_Cr', 'zoneB_min_YCbCr_Cr', 'zoneB_med_YCbCr_Cr', 'zoneB_max_YCbCr_Cr' ...
        'zoneB_mean_CMYK_M', 'zoneB_std_CMYK_M', 'zoneB_min_CMYK_M', 'zoneB_med_CMYK_M', 'zoneB_max_CMYK_M' ...
        'zoneC_mean_RGB_R', 'zoneC_std_RGB_R', 'zoneC_min_RGB_R', 'zoneC_med_RGB_R', 'zoneC_max_RGB_R' ...
        'zoneC_mean_RGB_G', 'zoneC_std_RGB_G', 'zoneC_min_RGB_G', 'zoneC_med_RGB_G', 'zoneC_max_RGB_G' ...
        'zoneC_mean_RGB_B', 'zoneC_std_RGB_B', 'zoneC_min_RGB_B', 'zoneC_med_RGB_B', 'zoneC_max_RGB_B' ...
        'zoneC_mean_RGB_RG', 'zoneC_std_RGB_RG', 'zoneC_min_RGB_RG', 'zoneC_med_RGB_RG', 'zoneC_max_RGB_RG' ...
        'zoneC_mean_LAB_L', 'zoneC_std_LAB_L', 'zoneC_min_LAB_L', 'zoneC_med_LAB_L', 'zoneC_max_LAB_L' ...
        'zoneC_mean_LAB_A', 'zoneC_std_LAB_A', 'zoneC_min_LAB_A', 'zoneC_med_LAB_A', 'zoneC_max_LAB_A' ...
        'zoneC_mean_LAB_B', 'zoneC_std_LAB_B', 'zoneC_min_LAB_B', 'zoneC_med_LAB_B', 'zoneC_max_LAB_B' ...
        'zoneC_mean_HSV_H', 'zoneC_std_HSV_H', 'zoneC_min_HSV_H', 'zoneC_med_HSV_H', 'zoneC_max_HSV_H' ...
        'zoneC_mean_HSV_S', 'zoneC_std_HSV_S', 'zoneC_min_HSV_S', 'zoneC_med_HSV_S', 'zoneC_max_HSV_S' ...
        'zoneC_mean_HSV_V', 'zoneC_std_HSV_V', 'zoneC_min_HSV_V', 'zoneC_med_HSV_V', 'zoneC_max_HSV_V' ...
        'zoneC_mean_YCbCr_Y', 'zoneC_std_YCbCr_Y', 'zoneC_min_YCbCr_Y', 'zoneC_med_YCbCr_Y', 'zoneC_max_YCbCr_Y' ...
        'zoneC_mean_YCbCr_Cr', 'zoneC_std_YCbCr_Cr', 'zoneC_min_YCbCr_Cr', 'zoneC_med_YCbCr_Cr', 'zoneC_max_YCbCr_Cr' ...
        'zoneC_mean_CMYK_M', 'zoneC_std_CMYK_M', 'zoneC_min_CMYK_M', 'zoneC_med_CMYK_M', 'zoneC_max_CMYK_M' ...
        'profile_mean_RGB_R', 'profile_std_RGB_R', 'profile_min_RGB_R', 'profile_med_RGB_R', 'profile_max_RGB_R' ...
        'profile_mean_RGB_G', 'profile_std_RGB_G', 'profile_min_RGB_G', 'profile_med_RGB_G', 'profile_max_RGB_G' ...
        'profile_mean_RGB_B', 'profile_std_RGB_B', 'profile_min_RGB_B', 'profile_med_RGB_B', 'profile_max_RGB_B' ...
        'profile_mean_RGB_RG', 'profile_std_RGB_RG', 'profile_min_RGB_RG', 'profile_med_RGB_RG', 'profile_max_RGB_RG' ...
        'profile_mean_LAB_L', 'profile_std_LAB_L', 'profile_min_LAB_L', 'profile_med_LAB_L', 'profile_max_LAB_L' ...
        'profile_mean_LAB_A', 'profile_std_LAB_A', 'profile_min_LAB_A', 'profile_med_LAB_A', 'profile_max_LAB_A' ...
        'profile_mean_LAB_B', 'profile_std_LAB_B', 'profile_min_LAB_B', 'profile_med_LAB_B', 'profile_max_LAB_B' ...
        'profile_mean_HSV_H', 'profile_std_HSV_H', 'profile_min_HSV_H', 'profile_med_HSV_H', 'profile_max_HSV_H' ...
        'profile_mean_HSV_S', 'profile_std_HSV_S', 'profile_min_HSV_S', 'profile_med_HSV_S', 'profile_max_HSV_S' ...
        'profile_mean_HSV_V', 'profile_std_HSV_V', 'profile_min_HSV_V', 'profile_med_HSV_V', 'profile_max_HSV_V' ...
        'profile_mean_YCbCr_Y', 'profile_std_YCbCr_Y', 'profile_min_YCbCr_Y', 'profile_med_YCbCr_Y', 'profile_max_YCbCr_Y' ...
        'profile_mean_YCbCr_Cr', 'profile_std_YCbCr_Cr', 'profile_min_YCbCr_Cr', 'profile_med_YCbCr_Cr', 'profile_max_YCbCr_Cr' ...
        'profile_mean_CMYK_M', 'profile_std_CMYK_M', 'profile_min_CMYK_M', 'profile_med_CMYK_M', 'profile_max_CMYK_M' ...
        'segment_mean_RGB_R', 'segment_std_RGB_R', 'segment_min_RGB_R', 'segment_med_RGB_R', 'segment_max_RGB_R' ...
        'segment_mean_RGB_G', 'segment_std_RGB_G', 'segment_min_RGB_G', 'segment_med_RGB_G', 'segment_max_RGB_G' ...
        'segment_mean_RGB_B', 'segment_std_RGB_B', 'segment_min_RGB_B', 'segment_med_RGB_B', 'segment_max_RGB_B' ...
        'segment_mean_RGB_RG', 'segment_std_RGB_RG', 'segment_min_RGB_RG', 'segment_med_RGB_RG', 'segment_max_RGB_RG' ...
        'segment_mean_LAB_L', 'segment_std_LAB_L', 'segment_min_LAB_L', 'segment_med_LAB_L', 'segment_max_LAB_L' ...
        'segment_mean_LAB_A', 'segment_std_LAB_A', 'segment_min_LAB_A', 'segment_med_LAB_A', 'segment_max_LAB_A' ...
        'segment_mean_LAB_B', 'segment_std_LAB_B', 'segment_min_LAB_B', 'segment_med_LAB_B', 'segment_max_LAB_B' ...
        'segment_mean_HSV_H', 'segment_std_HSV_H', 'segment_min_HSV_H', 'segment_med_HSV_H', 'segment_max_HSV_H' ...
        'segment_mean_HSV_S', 'segment_std_HSV_S', 'segment_min_HSV_S', 'segment_med_HSV_S', 'segment_max_HSV_S' ...
        'segment_mean_HSV_V', 'segment_std_HSV_V', 'segment_min_HSV_V', 'segment_med_HSV_V', 'segment_max_HSV_V' ...
        'segment_mean_YCbCr_Y', 'segment_std_YCbCr_Y', 'segment_min_YCbCr_Y', 'segment_med_YCbCr_Y', 'segment_max_YCbCr_Y' ...
        'segment_mean_YCbCr_Cr', 'segment_std_YCbCr_Cr', 'segment_min_YCbCr_Cr', 'segment_med_YCbCr_Cr', 'segment_max_YCbCr_Cr' ...
        'segment_mean_CMYK_M', 'segment_std_CMYK_M', 'segment_min_CMYK_M', 'segment_med_CMYK_M', 'segment_max_CMYK_M' ...
        'gradMag_mean_RGB_R', 'gradMag_std_RGB_R', 'gradMag_min_RGB_R', 'gradMag_med_RGB_R', 'gradMag_max_RGB_R' ...
        'gradMag_mean_RGB_G', 'gradMag_std_RGB_G', 'gradMag_min_RGB_G', 'gradMag_med_RGB_G', 'gradMag_max_RGB_G' ...
        'gradMag_mean_RGB_B', 'gradMag_std_RGB_B', 'gradMag_min_RGB_B', 'gradMag_med_RGB_B', 'gradMag_max_RGB_B' ...
        'gradMag_mean_RGB_RG', 'gradMag_std_RGB_RG', 'gradMag_min_RGB_RG', 'gradMag_med_RGB_RG', 'gradMag_max_RGB_RG' ...
        'gradMag_mean_LAB_L', 'gradMag_std_LAB_L', 'gradMag_min_LAB_L', 'gradMag_med_LAB_L', 'gradMag_max_LAB_L' ...
        'gradMag_mean_LAB_A', 'gradMag_std_LAB_A', 'gradMag_min_LAB_A', 'gradMag_med_LAB_A', 'gradMag_max_LAB_A' ...
        'gradMag_mean_LAB_B', 'gradMag_std_LAB_B', 'gradMag_min_LAB_B', 'gradMag_med_LAB_B', 'gradMag_max_LAB_B' ...
        'gradMag_mean_HSV_H', 'gradMag_std_HSV_H', 'gradMag_min_HSV_H', 'gradMag_med_HSV_H', 'gradMag_max_HSV_H' ...
        'gradMag_mean_HSV_S', 'gradMag_std_HSV_S', 'gradMag_min_HSV_S', 'gradMag_med_HSV_S', 'gradMag_max_HSV_S' ...
        'gradMag_mean_HSV_V', 'gradMag_std_HSV_V', 'gradMag_min_HSV_V', 'gradMag_med_HSV_V', 'gradMag_max_HSV_V' ...
        'gradMag_mean_YCbCr_Y', 'gradMag_std_YCbCr_Y', 'gradMag_min_YCbCr_Y', 'gradMag_med_YCbCr_Y', 'gradMag_max_YCbCr_Y' ...
        'gradMag_mean_YCbCr_Cr', 'gradMag_std_YCbCr_Cr', 'gradMag_min_YCbCr_Cr', 'gradMag_med_YCbCr_Cr', 'gradMag_max_YCbCr_Cr' ...
        'gradMag_mean_CMYK_M', 'gradMag_std_CMYK_M', 'gradMag_min_CMYK_M', 'gradMag_med_CMYK_M', 'gradMag_max_CMYK_M' ...
        'mean_NormD'});
    Table_data.Vessel = GT;   
    temp_name = cell2mat(fnameRAW(h));
    temp_name = temp_name(1,1:length(temp_name)-4);
    Filename = repmat({temp_name},size(Table_data, 1),1);
    Table_data.Filename = Filename;
    Table_data = [Table_data(:,end), Table_data(:,1:end-1)];
    All_data = [All_data; Table_data];
    h
end
writetable(All_data,'F_1-5_AVRDB_SkelYuni_SegRisna.csv');

%% Baca File INSPIRE
clear all; close all;
%%
% Membaca/input citra mentah dan vessel segmentasi (pilih file)
[fnameRAW, pnameRAW] = uigetfile('*.JPG','Please select RAW IMAGE(s)', 'MultiSelect', 'on');
fullnameRAW = strcat(pnameRAW,fnameRAW);
n_RAW = length(fullnameRAW);
%%
% Baca citra vessel
[fnameVES, pnameVES] = uigetfile({'*.tif'},'Please select GT VESSEL IMAGE(s)', 'MultiSelect', 'on');
fullnameVES = strcat(pnameVES,fnameVES);
%%
% Baca citra mask
[fnameMASK, pnameMASK] = uigetfile({'*.tiff'},'Please select MASK IMAGE(s)', 'MultiSelect', 'on');
fullnameMASK = strcat(pnameMASK,fnameMASK);
%%
% Baca file ROI
[fnameROI, pnameROI] = uigetfile({'*.mat'},'Please select ROI file(s)', 'MultiSelect', 'on');
fullnameROI = strcat(pnameROI,fnameROI);
%%
% Baca citra VESSEL SEGMENTATION
[fnameSEG, pnameSEG] = uigetfile('*.tiff','Please select VESSEL SEGMENTATION file(s)', 'MultiSelect', 'on');
fullnameSEG = strcat(pnameSEG,fnameSEG);
%%
% SKELETON Telea
[fnameSKEL, pnameSKEL] = uigetfile('*.png','Select SKELETON Telea image(s)', 'MultiSelect', 'on');
fullnameSKEL = strcat(pnameSKEL,fnameSKEL);

%% INSPIRE
All_data = []; All_fname = []; All_GT = [];
for h=1:1
    h
    % Membaca/input citra mentah dan ekstraksi kanal RGB
    rgbImage = imread(cell2mat(fullnameRAW(h))); 
    RGB_R = rgbImage(:,:,1);
    RGB_G = rgbImage(:,:,2); 
    RGB_B = rgbImage(:,:,3);
    RGB_RG = double(RGB_R).^2 + double(RGB_G).^2;
    RGB_RG = sqrt(0.5*RGB_RG);
    [row col] = size(RGB_G);
    [counts,binLocations] = imhist(RGB_R);
    B = 150/find(max(counts(100:end))==counts); RGB_R_Norm = RGB_R*B(1); RGB_R = RGB_R_Norm;
    [counts,binLocations] = imhist(RGB_G);
    B = 125/find(max(counts(50:end))==counts); RGB_G_Norm = RGB_G*B(1); RGB_G = RGB_G_Norm;
    [counts,binLocations] = imhist(RGB_B);
    B = 75/find(max(counts(10:150))==counts); RGB_B_Norm = RGB_B*B(1); RGB_B = RGB_B_Norm;
    rgbImage2 = cat(3, RGB_R_Norm, RGB_G_Norm, RGB_B_Norm);
    
    % Membaca ground truth arteri-vena
    vessImage = imread(cell2mat(fullnameVES(h)));
    vR = vessImage(:,:,1); i=find(vR~=0); vR(i) = 255;
    vG = vessImage(:,:,2); i=find(vG~=0); vG(i) = 255;
    vB = vessImage(:,:,3); i=find(vB~=0); vB(i) = 255;
    vRGB = cat(3, vR, vG, vB);
    arteriImage = vR-vG;
    venaImage = vB-vG;

    % Ekstraksi kanal LAB
    LAB = rgb2lab(rgbImage2);
    LAB_L = LAB(:,:,1);
    LAB_A = LAB(:,:,2);
    LAB_B = LAB(:,:,3);
    % Ekstraksi kanal HSV
    HSV = rgb2hsv(rgbImage2);
    HSV_H = HSV(:,:,1);
    HSV_S = HSV(:,:,2);
    HSV_V = HSV(:,:,3);
    % Ekstraksi kanal YCbCr
    YCbCr = rgb2ycbcr(rgbImage2);
    YCbCr_Y = YCbCr(:,:,1);
    %YCbCr_Cb = YCbCr(:,:,2);
    YCbCr_Cr = YCbCr(:,:,3);
    % Ekstraksi kanal CMYK
    RGBtoCMYK = makecform('srgb2cmyk');
    CMYK = applycform(rgbImage2,RGBtoCMYK);
    CMYK_M = CMYK(:,:,2);

    % Normalization
    window = ones(3,3)/9; 
    Norm_RGB_R = double(RGB_R); 
    Norm_RGB_G = double(RGB_G); 
    Norm_RGB_B = double(RGB_B); 
    Norm_RGB_RG = double(RGB_RG);
    Norm_LAB_L = double(LAB_L);  
    Norm_LAB_A = double(LAB_A);  
    Norm_LAB_B = double(LAB_B); 
    Norm_HSV_H = double(HSV_H);
    Norm_HSV_S = double(HSV_S);
    Norm_HSV_V = double(HSV_V);
    Norm_YCbCr_Y = double(YCbCr_Y);
    Norm_YCbCr_Cr = double(YCbCr_Cr); 
    Norm_CMYK_M = double(CMYK_M);   
    % Gradien Magnitude
    [Gmag_RGB_R, Gdir] = imgradient(RGB_R); [Gmag_RGB_G, Gdir] = imgradient(RGB_G); [Gmag_RGB_B, Gdir] = imgradient(RGB_B); [Gmag_RGB_RG, Gdir] = imgradient(RGB_RG);
    [Gmag_LAB_L, Gdir] = imgradient(LAB_L); [Gmag_LAB_A, Gdir] = imgradient(LAB_A); [Gmag_LAB_B, Gdir] = imgradient(LAB_B);
    [Gmag_HSV_H, Gdir] = imgradient(HSV_H); [Gmag_HSV_S, Gdir] = imgradient(HSV_S); [Gmag_HSV_V, Gdir] = imgradient(HSV_V);
    [Gmag_YCbCr_Y, Gdir] = imgradient(YCbCr_Y); [Gmag_YCbCr_Cr, Gdir] = imgradient(YCbCr_Cr); [Gmag_CMYK_M, Gdir] = imgradient(CMYK_M);

    % Buka ROI dan Masking
    OD = open(cell2mat(fullnameROI(h)));
    pinggiran = imread(cell2mat(fullnameMASK(h)));
    BW = imread(cell2mat(fullnameSEG(h)));
    % Ekstraksi ROI
    ROI = zeros(row,col);
    ROI = logical(ROI); %logical
    for i=1:row
        for j=1:col
            d_OD = sqrt((i-OD.X)^2+(j-OD.Y)^2);
            if (d_OD > 2*OD.radius) && (d_OD < 3*OD.radius)   % -------->> GANTI ROI
                ROI(i,j) = 1;
            end
        end
    end
    BW_final = ROI.*BW;
    
    % Skeletonisasi Yuni
%     Skel = bwmorph(BW,'skel',Inf); 
%     Skel = bwmorph(Skel,'spur',13); 
%     BW_final_2 = BW_final;    
%     Skel_fin = ROI.*Skel; 
%     Skel_fin = bwmorph(Skel_fin,'clean',1); 
%     Skel_fin_2 = Skel_fin;
%     branch = bwmorph(Skel_fin,'branchpoints',1);
    
    % Skeletonisasi TELEA
    BW_final_2 = BW_final;
    Skel = imread(cell2mat(fullnameSKEL(h)));
    Skel_fin = ROI.*Skel;
    Skel_fin = bwmorph(Skel_fin, 'clean',Inf);
    Skel_fin_2 = Skel_fin;
    branch = bwmorph(Skel_fin, 'branchpoints',1);
        
    [i j] = find(branch==1); A = [];
    for k=1:length(i)
        win = Skel_fin(i(k)-2:i(k)+2,j(k)-2:j(k)+2);
        A = [A; i(k) j(k) sum(win(:))];
        if sum(win(:))<7
            branch(i(k),j(k)) = 0;
        end
        if sum(win(:))>=7
            for m = i(k)-24:i(k)+24
                for n = j(k)-24:j(k)+24
                    cond = sqrt((m-i(k))^2+(n-j(k))^2);
                    if (cond<=24)
                        BW_final_2(m,n) = 0;
                        Skel_fin_2(m,n) = 0;
                    end
                end
            end
        end
    end

    [S] = DivideSkel(Skel_fin_2);
    [Segmen] = DivideSegmen2(S, BW_final_2);
    n_seg = max(Segmen(:,3)); seg = Segmen(:,3);
    segmen_x = Segmen(:,2); segmen_y = Segmen(:,1);
    %
%     f1 = figure();
%     imshow (BW),
%     hold on
    %
    F_pixel = []; F_profSeg = []; Feature = []; GT = []; 
    for i=1:n_seg
        idx = find(seg==i);
        x = segmen_x(idx);
        y = segmen_y(idx);
%         scatter(x, y, 5, 's', 'filled');
%     end

        D_seg = []; vote_vess = [];
        profile_RGB_R = []; profile_RGB_G = []; profile_RGB_B = []; profile_RGB_RG = []; 
        profile_LAB_L = []; profile_LAB_A = []; profile_LAB_B = []; 
        profile_HSV_H = []; profile_HSV_S = []; profile_HSV_V = []; 
        profile_YCbCr_Y = []; profile_YCbCr_Cr = []; profile_CMYK_M = [];
        segment_RGB_R = []; segment_RGB_G = []; segment_RGB_B = []; segment_RGB_RG = []; 
        segment_LAB_L = []; segment_LAB_A = []; segment_LAB_B = []; 
        segment_HSV_H = []; segment_HSV_S = []; segment_HSV_V = []; 
        segment_YCbCr_Y = []; segment_YCbCr_Cr = []; segment_CMYK_M = [];
        gradMag_RGB_R = []; gradMag_RGB_G = []; gradMag_RGB_B = []; gradMag_RGB_RG = []; 
        gradMag_LAB_L = []; gradMag_LAB_A = []; gradMag_LAB_B = []; 
        gradMag_HSV_H = []; gradMag_HSV_S = []; gradMag_HSV_V = []; 
        gradMag_YCbCr_Y = []; gradMag_YCbCr_Cr = []; gradMag_CMYK_M = [];
        
        if (length(idx)>64)
            for j=1:length(idx)
                segment_RGB_R = [segment_RGB_R, Norm_RGB_R(y(j),x(j))];
                segment_RGB_G = [segment_RGB_G, Norm_RGB_G(y(j),x(j))];
                segment_RGB_B = [segment_RGB_B, Norm_RGB_B(y(j),x(j))];
                segment_RGB_RG = [segment_RGB_RG, Norm_RGB_RG(y(j),x(j))];
                segment_LAB_L = [segment_LAB_L, Norm_LAB_L(y(j),x(j))];
                segment_LAB_A = [segment_LAB_A, Norm_LAB_L(y(j),x(j))];
                segment_LAB_B = [segment_LAB_B, Norm_LAB_L(y(j),x(j))];
                segment_HSV_H = [segment_HSV_H, Norm_HSV_H(y(j),x(j))];
                segment_HSV_S = [segment_HSV_S, Norm_HSV_H(y(j),x(j))];
                segment_HSV_V = [segment_HSV_V, Norm_HSV_H(y(j),x(j))];
                segment_YCbCr_Y = [segment_YCbCr_Y, Norm_YCbCr_Y(y(j),x(j))];
                segment_YCbCr_Cr = [segment_YCbCr_Cr, Norm_YCbCr_Cr(y(j),x(j))];
                segment_CMYK_M = [segment_CMYK_M, Norm_CMYK_M(y(j),x(j))];

                gradMag_RGB_R = [gradMag_RGB_R, Gmag_RGB_R(y(j),x(j))];
                gradMag_RGB_G = [gradMag_RGB_G, Gmag_RGB_G(y(j),x(j))];
                gradMag_RGB_B = [gradMag_RGB_B, Gmag_RGB_B(y(j),x(j))];
                gradMag_RGB_RG = [gradMag_RGB_RG, Gmag_RGB_RG(y(j),x(j))];
                gradMag_LAB_L = [gradMag_LAB_L, Gmag_LAB_L(y(j),x(j))];
                gradMag_LAB_A = [gradMag_LAB_A, Gmag_LAB_L(y(j),x(j))];
                gradMag_LAB_B = [gradMag_LAB_B, Gmag_LAB_L(y(j),x(j))];
                gradMag_HSV_H = [gradMag_HSV_H, Gmag_HSV_H(y(j),x(j))];
                gradMag_HSV_S = [gradMag_HSV_S, Gmag_HSV_H(y(j),x(j))];
                gradMag_HSV_V = [gradMag_HSV_V, Gmag_HSV_H(y(j),x(j))];
                gradMag_YCbCr_Y = [gradMag_YCbCr_Y, Gmag_YCbCr_Y(y(j),x(j))];
                gradMag_YCbCr_Cr = [gradMag_YCbCr_Cr, Gmag_YCbCr_Cr(y(j),x(j))];
                gradMag_CMYK_M = [gradMag_CMYK_M, Gmag_CMYK_M(y(j),x(j))];

                if (Skel(y(j),x(j))==1)
                    [grad D] = Calculate_Diameter(BW, y(j), x(j));
                    D_seg = [D_seg; D];
                    r_OD = sqrt((y(j)-OD.X)^2+(x(j)-OD.Y)^2)/OD.radius;
                    r_Center = sqrt((y(j)-row/2)^2+(x(j)-col/2)^2);
                    if (x(j)>OD.Y)
                        theta_OD = atan((y(j)-OD.X)/(x(j)-OD.Y));
                        theta_OD = mod(-theta_OD,2*pi);
                    else
                        theta_OD = atan((y(j)-OD.X)/(x(j)-OD.Y));
                        theta_OD = -theta_OD + pi;
                    end

                    profile_RGB_R = [profile_RGB_R, Norm_RGB_R(y(j),x(j))];
                    profile_RGB_G = [profile_RGB_G, Norm_RGB_G(y(j),x(j))];
                    profile_RGB_B = [profile_RGB_B, Norm_RGB_B(y(j),x(j))];
                    profile_RGB_RG = [profile_RGB_RG, Norm_RGB_RG(y(j),x(j))];
                    profile_LAB_L = [profile_LAB_L, Norm_LAB_L(y(j),x(j))];
                    profile_LAB_A = [profile_LAB_A, Norm_LAB_L(y(j),x(j))];
                    profile_LAB_B = [profile_LAB_B, Norm_LAB_L(y(j),x(j))];
                    profile_HSV_H = [profile_HSV_H, Norm_HSV_H(y(j),x(j))];
                    profile_HSV_S = [profile_HSV_S, Norm_HSV_H(y(j),x(j))];
                    profile_HSV_V = [profile_HSV_V, Norm_HSV_H(y(j),x(j))];
                    profile_YCbCr_Y = [profile_YCbCr_Y, Norm_YCbCr_Y(y(j),x(j))];
                    profile_YCbCr_Cr = [profile_YCbCr_Cr, Norm_YCbCr_Cr(y(j),x(j))];
                    profile_CMYK_M = [profile_CMYK_M, Norm_CMYK_M(y(j),x(j))];

                    zone_RGB_R = []; zone_RGB_G = []; zone_RGB_B = []; zone_RGB_RG = []; 
                    zone_LAB_L = []; zone_LAB_A = []; zone_LAB_B = []; 
                    zone_HSV_H = []; zone_HSV_S = []; zone_HSV_V = []; 
                    zone_YCbCr_Y = []; zone_YCbCr_Cr = []; zone_CMYK_M = [];
                    zone = ceil(0.25*D);
                    for m = y(j)-zone:y(j)+zone
                        for n = x(j)-zone:x(j)+zone
                            if (sqrt((m-y(j))^2+(n-x(j))^2)<=0.25*D)
                                zone_RGB_R = [zone_RGB_R, Norm_RGB_R(m,n)];
                                zone_RGB_G = [zone_RGB_G, Norm_RGB_G(m,n)];
                                zone_RGB_B = [zone_RGB_B, Norm_RGB_B(m,n)];
                                zone_RGB_RG = [zone_RGB_RG, Norm_RGB_RG(m,n)];
                                zone_LAB_L = [zone_LAB_L, Norm_LAB_L(m,n)];
                                zone_LAB_A = [zone_LAB_A, Norm_LAB_L(m,n)];
                                zone_LAB_B = [zone_LAB_B, Norm_LAB_L(m,n)];
                                zone_HSV_H = [zone_HSV_H, Norm_HSV_H(m,n)];
                                zone_HSV_S = [zone_HSV_S, Norm_HSV_H(m,n)];
                                zone_HSV_V = [zone_HSV_V, Norm_HSV_H(m,n)];
                                zone_YCbCr_Y = [zone_YCbCr_Y, Norm_YCbCr_Y(m,n)];
                                zone_YCbCr_Cr = [zone_YCbCr_Cr, Norm_YCbCr_Cr(m,n)];
                                zone_CMYK_M = [zone_CMYK_M, Norm_CMYK_M(m,n)];
                            end
                        end
                    end
                    zoneA = [mean(zone_RGB_R) std(zone_RGB_R) min(zone_RGB_R) median(zone_RGB_R) max(zone_RGB_R) ...
                        mean(zone_RGB_G) std(zone_RGB_G) min(zone_RGB_G) median(zone_RGB_G) max(zone_RGB_G) ...
                        mean(zone_RGB_B) std(zone_RGB_B) min(zone_RGB_B) median(zone_RGB_B) max(zone_RGB_B) ...
                        mean(zone_RGB_RG) std(zone_RGB_RG) min(zone_RGB_RG) median(zone_RGB_RG) max(zone_RGB_RG) ...
                        mean(zone_LAB_L) std(zone_LAB_L) min(zone_LAB_L) median(zone_LAB_L) max(zone_LAB_L) ...
                        mean(zone_LAB_A) std(zone_LAB_A) min(zone_LAB_A) median(zone_LAB_A) max(zone_LAB_A) ...
                        mean(zone_LAB_B) std(zone_LAB_B) min(zone_LAB_B) median(zone_LAB_B) max(zone_LAB_B) ...
                        mean(zone_HSV_H) std(zone_HSV_H) min(zone_HSV_H) median(zone_HSV_H) max(zone_HSV_H) ...
                        mean(zone_HSV_S) std(zone_HSV_S) min(zone_HSV_S) median(zone_HSV_S) max(zone_HSV_S) ...
                        mean(zone_HSV_V) std(zone_HSV_V) min(zone_HSV_V) median(zone_HSV_V) max(zone_HSV_V) ...
                        mean(zone_YCbCr_Y) std(zone_YCbCr_Y) min(zone_YCbCr_Y) median(zone_YCbCr_Y) max(zone_YCbCr_Y) ...
                        mean(zone_YCbCr_Cr) std(zone_YCbCr_Cr) min(zone_YCbCr_Cr) median(zone_YCbCr_Cr) max(zone_YCbCr_Cr) ...
                        mean(zone_CMYK_M) std(zone_CMYK_M) min(zone_CMYK_M) median(zone_CMYK_M) max(zone_CMYK_M)];
                    zone_RGB_R = []; zone_RGB_G = []; zone_RGB_B = []; zone_RGB_RG = []; 
                    zone_LAB_L = []; zone_LAB_A = []; zone_LAB_B = []; 
                    zone_HSV_H = []; zone_HSV_S = []; zone_HSV_V = []; 
                    zone_YCbCr_Y = []; zone_YCbCr_Cr = []; zone_CMYK_M = [];
                    zone = ceil(0.5*D);
                    for m = y(j)-zone:y(j)+zone
                        for n = x(j)-zone:x(j)+zone
                            if (sqrt((m-y(j))^2+(n-x(j))^2)<=0.5*D)
                                zone_RGB_R = [zone_RGB_R, Norm_RGB_R(m,n)];
                                zone_RGB_G = [zone_RGB_G, Norm_RGB_G(m,n)];
                                zone_RGB_B = [zone_RGB_B, Norm_RGB_B(m,n)];
                                zone_RGB_RG = [zone_RGB_RG, Norm_RGB_RG(m,n)];
                                zone_LAB_L = [zone_LAB_L, Norm_LAB_L(m,n)];
                                zone_LAB_A = [zone_LAB_A, Norm_LAB_L(m,n)];
                                zone_LAB_B = [zone_LAB_B, Norm_LAB_L(m,n)];
                                zone_HSV_H = [zone_HSV_H, Norm_HSV_H(m,n)];
                                zone_HSV_S = [zone_HSV_S, Norm_HSV_H(m,n)];
                                zone_HSV_V = [zone_HSV_V, Norm_HSV_H(m,n)];
                                zone_YCbCr_Y = [zone_YCbCr_Y, Norm_YCbCr_Y(m,n)];
                                zone_YCbCr_Cr = [zone_YCbCr_Cr, Norm_YCbCr_Cr(m,n)];
                                zone_CMYK_M = [zone_CMYK_M, Norm_CMYK_M(m,n)];
                            end
                        end
                    end
                    zoneB = [mean(zone_RGB_R) std(zone_RGB_R) min(zone_RGB_R) median(zone_RGB_R) max(zone_RGB_R) ...
                        mean(zone_RGB_G) std(zone_RGB_G) min(zone_RGB_G) median(zone_RGB_G) max(zone_RGB_G) ...
                        mean(zone_RGB_B) std(zone_RGB_B) min(zone_RGB_B) median(zone_RGB_B) max(zone_RGB_B) ...
                        mean(zone_RGB_RG) std(zone_RGB_RG) min(zone_RGB_RG) median(zone_RGB_RG) max(zone_RGB_RG) ...
                        mean(zone_LAB_L) std(zone_LAB_L) min(zone_LAB_L) median(zone_LAB_L) max(zone_LAB_L) ...
                        mean(zone_LAB_A) std(zone_LAB_A) min(zone_LAB_A) median(zone_LAB_A) max(zone_LAB_A) ...
                        mean(zone_LAB_B) std(zone_LAB_B) min(zone_LAB_B) median(zone_LAB_B) max(zone_LAB_B) ...
                        mean(zone_HSV_H) std(zone_HSV_H) min(zone_HSV_H) median(zone_HSV_H) max(zone_HSV_H) ...
                        mean(zone_HSV_S) std(zone_HSV_S) min(zone_HSV_S) median(zone_HSV_S) max(zone_HSV_S) ...
                        mean(zone_HSV_V) std(zone_HSV_V) min(zone_HSV_V) median(zone_HSV_V) max(zone_HSV_V) ...
                        mean(zone_YCbCr_Y) std(zone_YCbCr_Y) min(zone_YCbCr_Y) median(zone_YCbCr_Y) max(zone_YCbCr_Y) ...
                        mean(zone_YCbCr_Cr) std(zone_YCbCr_Cr) min(zone_YCbCr_Cr) median(zone_YCbCr_Cr) max(zone_YCbCr_Cr) ...
                        mean(zone_CMYK_M) std(zone_CMYK_M) min(zone_CMYK_M) median(zone_CMYK_M) max(zone_CMYK_M)];
                    zone_RGB_R = []; zone_RGB_G = []; zone_RGB_B = []; zone_RGB_RG = []; 
                    zone_LAB_L = []; zone_LAB_A = []; zone_LAB_B = []; 
                    zone_HSV_H = []; zone_HSV_S = []; zone_HSV_V = []; 
                    zone_YCbCr_Y = []; zone_YCbCr_Cr = []; zone_CMYK_M = [];
                    zone = ceil(1*D);
                    for m = y(j)-zone:y(j)+zone
                        for n = x(j)-zone:x(j)+zone
                            if (sqrt((m-y(j))^2+(n-x(j))^2)<=1*D)
                                zone_RGB_R = [zone_RGB_R, Norm_RGB_R(m,n)];
                                zone_RGB_G = [zone_RGB_G, Norm_RGB_G(m,n)];
                                zone_RGB_B = [zone_RGB_B, Norm_RGB_B(m,n)];
                                zone_RGB_RG = [zone_RGB_RG, Norm_RGB_RG(m,n)];
                                zone_LAB_L = [zone_LAB_L, Norm_LAB_L(m,n)];
                                zone_LAB_A = [zone_LAB_A, Norm_LAB_L(m,n)];
                                zone_LAB_B = [zone_LAB_B, Norm_LAB_L(m,n)];
                                zone_HSV_H = [zone_HSV_H, Norm_HSV_H(m,n)];
                                zone_HSV_S = [zone_HSV_S, Norm_HSV_H(m,n)];
                                zone_HSV_V = [zone_HSV_V, Norm_HSV_H(m,n)];
                                zone_YCbCr_Y = [zone_YCbCr_Y, Norm_YCbCr_Y(m,n)];
                                zone_YCbCr_Cr = [zone_YCbCr_Cr, Norm_YCbCr_Cr(m,n)];
                                zone_CMYK_M = [zone_CMYK_M, Norm_CMYK_M(m,n)];
                            end
                        end
                    end
                    zoneC = [mean(zone_RGB_R) std(zone_RGB_R) min(zone_RGB_R) median(zone_RGB_R) max(zone_RGB_R) ...
                        mean(zone_RGB_G) std(zone_RGB_G) min(zone_RGB_G) median(zone_RGB_G) max(zone_RGB_G) ...
                        mean(zone_RGB_B) std(zone_RGB_B) min(zone_RGB_B) median(zone_RGB_B) max(zone_RGB_B) ...
                        mean(zone_RGB_RG) std(zone_RGB_RG) min(zone_RGB_RG) median(zone_RGB_RG) max(zone_RGB_RG) ...
                        mean(zone_LAB_L) std(zone_LAB_L) min(zone_LAB_L) median(zone_LAB_L) max(zone_LAB_L) ...
                        mean(zone_LAB_A) std(zone_LAB_A) min(zone_LAB_A) median(zone_LAB_A) max(zone_LAB_A) ...
                        mean(zone_LAB_B) std(zone_LAB_B) min(zone_LAB_B) median(zone_LAB_B) max(zone_LAB_B) ...
                        mean(zone_HSV_H) std(zone_HSV_H) min(zone_HSV_H) median(zone_HSV_H) max(zone_HSV_H) ...
                        mean(zone_HSV_S) std(zone_HSV_S) min(zone_HSV_S) median(zone_HSV_S) max(zone_HSV_S) ...
                        mean(zone_HSV_V) std(zone_HSV_V) min(zone_HSV_V) median(zone_HSV_V) max(zone_HSV_V) ...
                        mean(zone_YCbCr_Y) std(zone_YCbCr_Y) min(zone_YCbCr_Y) median(zone_YCbCr_Y) max(zone_YCbCr_Y) ...
                        mean(zone_YCbCr_Cr) std(zone_YCbCr_Cr) min(zone_YCbCr_Cr) median(zone_YCbCr_Cr) max(zone_YCbCr_Cr) ...
                        mean(zone_CMYK_M) std(zone_CMYK_M) min(zone_CMYK_M) median(zone_CMYK_M) max(zone_CMYK_M)];
                else
                    grad = 0; D = 0; r_OD = 0; r_Center = 0; theta_OD = 0;
                    zoneA = zeros(1,65); zoneB = zeros(1,65); zoneC = zeros(1,65); 
                end
                if (arteriImage(y(j), x(j)) == 255)
                    vote_vess = [vote_vess; 1]; % ARTERI
                elseif (venaImage(y(j), x(j)) == 255)
                    vote_vess = [vote_vess; -1]; % VENA
                else
                    vote_vess = [vote_vess; 0]; % NOT BOTH
                end

                if (D~=0)
                    F_pixel = [F_pixel; i, y(j), x(j), grad, D, D/OD.radius, r_OD, theta_OD, r_Center/row ...
                        Norm_RGB_R(y(j),x(j)), Norm_RGB_G(y(j),x(j)), Norm_RGB_B(y(j),x(j)), Norm_RGB_RG(y(j),x(j)) ...
                        Norm_LAB_L(y(j),x(j)), Norm_LAB_A(y(j),x(j)), Norm_LAB_B(y(j),x(j)) ...
                        Norm_HSV_H(y(j),x(j)), Norm_HSV_S(y(j),x(j)), Norm_HSV_V(y(j),x(j)) ...
                        Norm_YCbCr_Y(y(j),x(j)), Norm_YCbCr_Cr(y(j),x(j)), Norm_CMYK_M(y(j),x(j)) ...
                        zoneA, zoneB, zoneC ];
                end
            end

            if (length(D_seg)==0)
                profilFeature = zeros(1,65);
            else
                profilFeature = [mean(profile_RGB_R) std(profile_RGB_R) min(profile_RGB_R) median(profile_RGB_R) max(profile_RGB_R) ...
                    mean(profile_RGB_G) std(profile_RGB_G) min(profile_RGB_G) median(profile_RGB_G) max(profile_RGB_G) ...
                    mean(profile_RGB_B) std(profile_RGB_B) min(profile_RGB_B) median(profile_RGB_B) max(profile_RGB_B) ...
                    mean(profile_RGB_RG) std(profile_RGB_RG) min(profile_RGB_RG) median(profile_RGB_RG) max(profile_RGB_RG) ...
                    mean(profile_LAB_L) std(profile_LAB_L) min(profile_LAB_L) median(profile_LAB_L) max(profile_LAB_L) ...
                    mean(profile_LAB_A) std(profile_LAB_A) min(profile_LAB_A) median(profile_LAB_A) max(profile_LAB_A) ...
                    mean(profile_LAB_B) std(profile_LAB_B) min(profile_LAB_B) median(profile_LAB_B) max(profile_LAB_B) ...
                    mean(profile_HSV_H) std(profile_HSV_H) min(profile_HSV_H) median(profile_HSV_H) max(profile_HSV_H) ...
                    mean(profile_HSV_S) std(profile_HSV_S) min(profile_HSV_S) median(profile_HSV_S) max(profile_HSV_S) ...
                    mean(profile_HSV_V) std(profile_HSV_V) min(profile_HSV_V) median(profile_HSV_V) max(profile_HSV_V) ...
                    mean(profile_YCbCr_Y) std(profile_YCbCr_Y) min(profile_YCbCr_Y) median(profile_YCbCr_Y) max(profile_YCbCr_Y) ...
                    mean(profile_YCbCr_Cr) std(profile_YCbCr_Cr) min(profile_YCbCr_Cr) median(profile_YCbCr_Cr) max(profile_YCbCr_Cr) ...
                    mean(profile_CMYK_M) std(profile_CMYK_M) min(profile_CMYK_M) median(profile_CMYK_M) max(profile_CMYK_M)];
            end
            segmentFeature = [mean(segment_RGB_R) std(segment_RGB_R) min(segment_RGB_R) median(segment_RGB_R) max(segment_RGB_R) ...
                mean(segment_RGB_G) std(segment_RGB_G) min(segment_RGB_G) median(segment_RGB_G) max(segment_RGB_G) ...
                mean(segment_RGB_B) std(segment_RGB_B) min(segment_RGB_B) median(segment_RGB_B) max(segment_RGB_B) ...
                mean(segment_RGB_RG) std(segment_RGB_RG) min(segment_RGB_RG) median(segment_RGB_RG) max(segment_RGB_RG) ...
                mean(segment_LAB_L) std(segment_LAB_L) min(segment_LAB_L) median(segment_LAB_L) max(segment_LAB_L) ...
                mean(segment_LAB_A) std(segment_LAB_A) min(segment_LAB_A) median(segment_LAB_A) max(segment_LAB_A) ...
                mean(segment_LAB_B) std(segment_LAB_B) min(segment_LAB_B) median(segment_LAB_B) max(segment_LAB_B) ...
                mean(segment_HSV_H) std(segment_HSV_H) min(segment_HSV_H) median(segment_HSV_H) max(segment_HSV_H) ...
                mean(segment_HSV_S) std(segment_HSV_S) min(segment_HSV_S) median(segment_HSV_S) max(segment_HSV_S) ...
                mean(segment_HSV_V) std(segment_HSV_V) min(segment_HSV_V) median(segment_HSV_V) max(segment_HSV_V) ...
                mean(segment_YCbCr_Y) std(segment_YCbCr_Y) min(segment_YCbCr_Y) median(segment_YCbCr_Y) max(segment_YCbCr_Y) ...
                mean(segment_YCbCr_Cr) std(segment_YCbCr_Cr) min(segment_YCbCr_Cr) median(segment_YCbCr_Cr) max(segment_YCbCr_Cr) ...
                mean(segment_CMYK_M) std(segment_CMYK_M) min(segment_CMYK_M) median(segment_CMYK_M) max(segment_CMYK_M)];
            gradMagFeature = [mean(gradMag_RGB_R) std(gradMag_RGB_R) min(gradMag_RGB_R) median(gradMag_RGB_R) max(gradMag_RGB_R) ...
                mean(gradMag_RGB_G) std(gradMag_RGB_G) min(gradMag_RGB_G) median(gradMag_RGB_G) max(gradMag_RGB_G) ...
                mean(gradMag_RGB_B) std(gradMag_RGB_B) min(gradMag_RGB_B) median(gradMag_RGB_B) max(gradMag_RGB_B) ...
                mean(gradMag_RGB_RG) std(gradMag_RGB_RG) min(gradMag_RGB_RG) median(gradMag_RGB_RG) max(gradMag_RGB_RG) ...
                mean(gradMag_LAB_L) std(gradMag_LAB_L) min(gradMag_LAB_L) median(gradMag_LAB_L) max(gradMag_LAB_L) ...
                mean(gradMag_LAB_A) std(gradMag_LAB_A) min(gradMag_LAB_A) median(gradMag_LAB_A) max(gradMag_LAB_A) ...
                mean(gradMag_LAB_B) std(gradMag_LAB_B) min(gradMag_LAB_B) median(gradMag_LAB_B) max(gradMag_LAB_B) ...
                mean(gradMag_HSV_H) std(gradMag_HSV_H) min(gradMag_HSV_H) median(gradMag_HSV_H) max(gradMag_HSV_H) ...
                mean(gradMag_HSV_S) std(gradMag_HSV_S) min(gradMag_HSV_S) median(gradMag_HSV_S) max(gradMag_HSV_S) ...
                mean(gradMag_HSV_V) std(gradMag_HSV_V) min(gradMag_HSV_V) median(gradMag_HSV_V) max(gradMag_HSV_V) ...
                mean(gradMag_YCbCr_Y) std(gradMag_YCbCr_Y) min(gradMag_YCbCr_Y) median(gradMag_YCbCr_Y) max(gradMag_YCbCr_Y) ...
                mean(gradMag_YCbCr_Cr) std(gradMag_YCbCr_Cr) min(gradMag_YCbCr_Cr) median(gradMag_YCbCr_Cr) max(gradMag_YCbCr_Cr) ...
                mean(gradMag_CMYK_M) std(gradMag_CMYK_M) min(gradMag_CMYK_M) median(gradMag_CMYK_M) max(gradMag_CMYK_M)];
            profSegFeature = repmat([profilFeature, segmentFeature, gradMagFeature, mean(D_seg)/OD.radius],length(D_seg),1);
            F_profSeg = [F_profSeg; profSegFeature];

            vess = sum(vote_vess);
            if (vess>0)
                GT = [GT; repmat(cellstr('Arteri'), length(D_seg),1)]; % ARTERI
            elseif (vess<0) 
                GT = [GT; repmat(cellstr('Vena'), length(D_seg),1)]; % VENA
            else
                GT = [GT; repmat(cellstr('NB'), length(D_seg),1)]; % Not Both
            end
        end
    end
%     hold off
%     close(f1)

    Feature = [F_pixel, F_profSeg];
    % Masukin fitur ke tabel
    Table_data = array2table(Feature,...
        'VariableNames',{'Segmen','Baris','Kolom','Grad','Diameter','NormD','DistToOD','AngleToOD','DistToCenter' ...
        'Pix_RGB_R','Pix_RGB_G','Pix_RGB_B','Pix_RGB_RG','Pix_LAB_L','Pix_LAB_A','Pix_LAB_B' ...
        'Pix_HSV_H','Pix_HSV_S','Pix_HSV_V','Pix_YCbCr_Y','Pix_YCbCr_Cr','Pix_CMYK_M' ...
        'zoneA_mean_RGB_R', 'zoneA_std_RGB_R', 'zoneA_min_RGB_R', 'zoneA_med_RGB_R', 'zoneA_max_RGB_R' ...
        'zoneA_mean_RGB_G', 'zoneA_std_RGB_G', 'zoneA_min_RGB_G', 'zoneA_med_RGB_G', 'zoneA_max_RGB_G' ...
        'zoneA_mean_RGB_B', 'zoneA_std_RGB_B', 'zoneA_min_RGB_B', 'zoneA_med_RGB_B', 'zoneA_max_RGB_B' ...
        'zoneA_mean_RGB_RG', 'zoneA_std_RGB_RG', 'zoneA_min_RGB_RG', 'zoneA_med_RGB_RG', 'zoneA_max_RGB_RG' ...
        'zoneA_mean_LAB_L', 'zoneA_std_LAB_L', 'zoneA_min_LAB_L', 'zoneA_med_LAB_L', 'zoneA_max_LAB_L' ...
        'zoneA_mean_LAB_A', 'zoneA_std_LAB_A', 'zoneA_min_LAB_A', 'zoneA_med_LAB_A', 'zoneA_max_LAB_A' ...
        'zoneA_mean_LAB_B', 'zoneA_std_LAB_B', 'zoneA_min_LAB_B', 'zoneA_med_LAB_B', 'zoneA_max_LAB_B' ...
        'zoneA_mean_HSV_H', 'zoneA_std_HSV_H', 'zoneA_min_HSV_H', 'zoneA_med_HSV_H', 'zoneA_max_HSV_H' ...
        'zoneA_mean_HSV_S', 'zoneA_std_HSV_S', 'zoneA_min_HSV_S', 'zoneA_med_HSV_S', 'zoneA_max_HSV_S' ...
        'zoneA_mean_HSV_V', 'zoneA_std_HSV_V', 'zoneA_min_HSV_V', 'zoneA_med_HSV_V', 'zoneA_max_HSV_V' ...
        'zoneA_mean_YCbCr_Y', 'zoneA_std_YCbCr_Y', 'zoneA_min_YCbCr_Y', 'zoneA_med_YCbCr_Y', 'zoneA_max_YCbCr_Y' ...
        'zoneA_mean_YCbCr_Cr', 'zoneA_std_YCbCr_Cr', 'zoneA_min_YCbCr_Cr', 'zoneA_med_YCbCr_Cr', 'zoneA_max_YCbCr_Cr' ...
        'zoneA_mean_CMYK_M', 'zoneA_std_CMYK_M', 'zoneA_min_CMYK_M', 'zoneA_med_CMYK_M', 'zoneA_max_CMYK_M' ...
        'zoneB_mean_RGB_R', 'zoneB_std_RGB_R', 'zoneB_min_RGB_R', 'zoneB_med_RGB_R', 'zoneB_max_RGB_R' ...
        'zoneB_mean_RGB_G', 'zoneB_std_RGB_G', 'zoneB_min_RGB_G', 'zoneB_med_RGB_G', 'zoneB_max_RGB_G' ...
        'zoneB_mean_RGB_B', 'zoneB_std_RGB_B', 'zoneB_min_RGB_B', 'zoneB_med_RGB_B', 'zoneB_max_RGB_B' ...
        'zoneB_mean_RGB_RG', 'zoneB_std_RGB_RG', 'zoneB_min_RGB_RG', 'zoneB_med_RGB_RG', 'zoneB_max_RGB_RG' ...
        'zoneB_mean_LAB_L', 'zoneB_std_LAB_L', 'zoneB_min_LAB_L', 'zoneB_med_LAB_L', 'zoneB_max_LAB_L' ...
        'zoneB_mean_LAB_A', 'zoneB_std_LAB_A', 'zoneB_min_LAB_A', 'zoneB_med_LAB_A', 'zoneB_max_LAB_A' ...
        'zoneB_mean_LAB_B', 'zoneB_std_LAB_B', 'zoneB_min_LAB_B', 'zoneB_med_LAB_B', 'zoneB_max_LAB_B' ...
        'zoneB_mean_HSV_H', 'zoneB_std_HSV_H', 'zoneB_min_HSV_H', 'zoneB_med_HSV_H', 'zoneB_max_HSV_H' ...
        'zoneB_mean_HSV_S', 'zoneB_std_HSV_S', 'zoneB_min_HSV_S', 'zoneB_med_HSV_S', 'zoneB_max_HSV_S' ...
        'zoneB_mean_HSV_V', 'zoneB_std_HSV_V', 'zoneB_min_HSV_V', 'zoneB_med_HSV_V', 'zoneB_max_HSV_V' ...
        'zoneB_mean_YCbCr_Y', 'zoneB_std_YCbCr_Y', 'zoneB_min_YCbCr_Y', 'zoneB_med_YCbCr_Y', 'zoneB_max_YCbCr_Y' ...
        'zoneB_mean_YCbCr_Cr', 'zoneB_std_YCbCr_Cr', 'zoneB_min_YCbCr_Cr', 'zoneB_med_YCbCr_Cr', 'zoneB_max_YCbCr_Cr' ...
        'zoneB_mean_CMYK_M', 'zoneB_std_CMYK_M', 'zoneB_min_CMYK_M', 'zoneB_med_CMYK_M', 'zoneB_max_CMYK_M' ...
        'zoneC_mean_RGB_R', 'zoneC_std_RGB_R', 'zoneC_min_RGB_R', 'zoneC_med_RGB_R', 'zoneC_max_RGB_R' ...
        'zoneC_mean_RGB_G', 'zoneC_std_RGB_G', 'zoneC_min_RGB_G', 'zoneC_med_RGB_G', 'zoneC_max_RGB_G' ...
        'zoneC_mean_RGB_B', 'zoneC_std_RGB_B', 'zoneC_min_RGB_B', 'zoneC_med_RGB_B', 'zoneC_max_RGB_B' ...
        'zoneC_mean_RGB_RG', 'zoneC_std_RGB_RG', 'zoneC_min_RGB_RG', 'zoneC_med_RGB_RG', 'zoneC_max_RGB_RG' ...
        'zoneC_mean_LAB_L', 'zoneC_std_LAB_L', 'zoneC_min_LAB_L', 'zoneC_med_LAB_L', 'zoneC_max_LAB_L' ...
        'zoneC_mean_LAB_A', 'zoneC_std_LAB_A', 'zoneC_min_LAB_A', 'zoneC_med_LAB_A', 'zoneC_max_LAB_A' ...
        'zoneC_mean_LAB_B', 'zoneC_std_LAB_B', 'zoneC_min_LAB_B', 'zoneC_med_LAB_B', 'zoneC_max_LAB_B' ...
        'zoneC_mean_HSV_H', 'zoneC_std_HSV_H', 'zoneC_min_HSV_H', 'zoneC_med_HSV_H', 'zoneC_max_HSV_H' ...
        'zoneC_mean_HSV_S', 'zoneC_std_HSV_S', 'zoneC_min_HSV_S', 'zoneC_med_HSV_S', 'zoneC_max_HSV_S' ...
        'zoneC_mean_HSV_V', 'zoneC_std_HSV_V', 'zoneC_min_HSV_V', 'zoneC_med_HSV_V', 'zoneC_max_HSV_V' ...
        'zoneC_mean_YCbCr_Y', 'zoneC_std_YCbCr_Y', 'zoneC_min_YCbCr_Y', 'zoneC_med_YCbCr_Y', 'zoneC_max_YCbCr_Y' ...
        'zoneC_mean_YCbCr_Cr', 'zoneC_std_YCbCr_Cr', 'zoneC_min_YCbCr_Cr', 'zoneC_med_YCbCr_Cr', 'zoneC_max_YCbCr_Cr' ...
        'zoneC_mean_CMYK_M', 'zoneC_std_CMYK_M', 'zoneC_min_CMYK_M', 'zoneC_med_CMYK_M', 'zoneC_max_CMYK_M' ...
        'profile_mean_RGB_R', 'profile_std_RGB_R', 'profile_min_RGB_R', 'profile_med_RGB_R', 'profile_max_RGB_R' ...
        'profile_mean_RGB_G', 'profile_std_RGB_G', 'profile_min_RGB_G', 'profile_med_RGB_G', 'profile_max_RGB_G' ...
        'profile_mean_RGB_B', 'profile_std_RGB_B', 'profile_min_RGB_B', 'profile_med_RGB_B', 'profile_max_RGB_B' ...
        'profile_mean_RGB_RG', 'profile_std_RGB_RG', 'profile_min_RGB_RG', 'profile_med_RGB_RG', 'profile_max_RGB_RG' ...
        'profile_mean_LAB_L', 'profile_std_LAB_L', 'profile_min_LAB_L', 'profile_med_LAB_L', 'profile_max_LAB_L' ...
        'profile_mean_LAB_A', 'profile_std_LAB_A', 'profile_min_LAB_A', 'profile_med_LAB_A', 'profile_max_LAB_A' ...
        'profile_mean_LAB_B', 'profile_std_LAB_B', 'profile_min_LAB_B', 'profile_med_LAB_B', 'profile_max_LAB_B' ...
        'profile_mean_HSV_H', 'profile_std_HSV_H', 'profile_min_HSV_H', 'profile_med_HSV_H', 'profile_max_HSV_H' ...
        'profile_mean_HSV_S', 'profile_std_HSV_S', 'profile_min_HSV_S', 'profile_med_HSV_S', 'profile_max_HSV_S' ...
        'profile_mean_HSV_V', 'profile_std_HSV_V', 'profile_min_HSV_V', 'profile_med_HSV_V', 'profile_max_HSV_V' ...
        'profile_mean_YCbCr_Y', 'profile_std_YCbCr_Y', 'profile_min_YCbCr_Y', 'profile_med_YCbCr_Y', 'profile_max_YCbCr_Y' ...
        'profile_mean_YCbCr_Cr', 'profile_std_YCbCr_Cr', 'profile_min_YCbCr_Cr', 'profile_med_YCbCr_Cr', 'profile_max_YCbCr_Cr' ...
        'profile_mean_CMYK_M', 'profile_std_CMYK_M', 'profile_min_CMYK_M', 'profile_med_CMYK_M', 'profile_max_CMYK_M' ...
        'segment_mean_RGB_R', 'segment_std_RGB_R', 'segment_min_RGB_R', 'segment_med_RGB_R', 'segment_max_RGB_R' ...
        'segment_mean_RGB_G', 'segment_std_RGB_G', 'segment_min_RGB_G', 'segment_med_RGB_G', 'segment_max_RGB_G' ...
        'segment_mean_RGB_B', 'segment_std_RGB_B', 'segment_min_RGB_B', 'segment_med_RGB_B', 'segment_max_RGB_B' ...
        'segment_mean_RGB_RG', 'segment_std_RGB_RG', 'segment_min_RGB_RG', 'segment_med_RGB_RG', 'segment_max_RGB_RG' ...
        'segment_mean_LAB_L', 'segment_std_LAB_L', 'segment_min_LAB_L', 'segment_med_LAB_L', 'segment_max_LAB_L' ...
        'segment_mean_LAB_A', 'segment_std_LAB_A', 'segment_min_LAB_A', 'segment_med_LAB_A', 'segment_max_LAB_A' ...
        'segment_mean_LAB_B', 'segment_std_LAB_B', 'segment_min_LAB_B', 'segment_med_LAB_B', 'segment_max_LAB_B' ...
        'segment_mean_HSV_H', 'segment_std_HSV_H', 'segment_min_HSV_H', 'segment_med_HSV_H', 'segment_max_HSV_H' ...
        'segment_mean_HSV_S', 'segment_std_HSV_S', 'segment_min_HSV_S', 'segment_med_HSV_S', 'segment_max_HSV_S' ...
        'segment_mean_HSV_V', 'segment_std_HSV_V', 'segment_min_HSV_V', 'segment_med_HSV_V', 'segment_max_HSV_V' ...
        'segment_mean_YCbCr_Y', 'segment_std_YCbCr_Y', 'segment_min_YCbCr_Y', 'segment_med_YCbCr_Y', 'segment_max_YCbCr_Y' ...
        'segment_mean_YCbCr_Cr', 'segment_std_YCbCr_Cr', 'segment_min_YCbCr_Cr', 'segment_med_YCbCr_Cr', 'segment_max_YCbCr_Cr' ...
        'segment_mean_CMYK_M', 'segment_std_CMYK_M', 'segment_min_CMYK_M', 'segment_med_CMYK_M', 'segment_max_CMYK_M' ...
        'gradMag_mean_RGB_R', 'gradMag_std_RGB_R', 'gradMag_min_RGB_R', 'gradMag_med_RGB_R', 'gradMag_max_RGB_R' ...
        'gradMag_mean_RGB_G', 'gradMag_std_RGB_G', 'gradMag_min_RGB_G', 'gradMag_med_RGB_G', 'gradMag_max_RGB_G' ...
        'gradMag_mean_RGB_B', 'gradMag_std_RGB_B', 'gradMag_min_RGB_B', 'gradMag_med_RGB_B', 'gradMag_max_RGB_B' ...
        'gradMag_mean_RGB_RG', 'gradMag_std_RGB_RG', 'gradMag_min_RGB_RG', 'gradMag_med_RGB_RG', 'gradMag_max_RGB_RG' ...
        'gradMag_mean_LAB_L', 'gradMag_std_LAB_L', 'gradMag_min_LAB_L', 'gradMag_med_LAB_L', 'gradMag_max_LAB_L' ...
        'gradMag_mean_LAB_A', 'gradMag_std_LAB_A', 'gradMag_min_LAB_A', 'gradMag_med_LAB_A', 'gradMag_max_LAB_A' ...
        'gradMag_mean_LAB_B', 'gradMag_std_LAB_B', 'gradMag_min_LAB_B', 'gradMag_med_LAB_B', 'gradMag_max_LAB_B' ...
        'gradMag_mean_HSV_H', 'gradMag_std_HSV_H', 'gradMag_min_HSV_H', 'gradMag_med_HSV_H', 'gradMag_max_HSV_H' ...
        'gradMag_mean_HSV_S', 'gradMag_std_HSV_S', 'gradMag_min_HSV_S', 'gradMag_med_HSV_S', 'gradMag_max_HSV_S' ...
        'gradMag_mean_HSV_V', 'gradMag_std_HSV_V', 'gradMag_min_HSV_V', 'gradMag_med_HSV_V', 'gradMag_max_HSV_V' ...
        'gradMag_mean_YCbCr_Y', 'gradMag_std_YCbCr_Y', 'gradMag_min_YCbCr_Y', 'gradMag_med_YCbCr_Y', 'gradMag_max_YCbCr_Y' ...
        'gradMag_mean_YCbCr_Cr', 'gradMag_std_YCbCr_Cr', 'gradMag_min_YCbCr_Cr', 'gradMag_med_YCbCr_Cr', 'gradMag_max_YCbCr_Cr' ...
        'gradMag_mean_CMYK_M', 'gradMag_std_CMYK_M', 'gradMag_min_CMYK_M', 'gradMag_med_CMYK_M', 'gradMag_max_CMYK_M' ...
        'mean_NormD'});
    Table_data.Vessel = GT;   
    temp_name = cell2mat(fnameRAW(h));
    temp_name = temp_name(1,1:length(temp_name)-4);
    Filename = repmat({temp_name},size(Table_data, 1),1);
    Table_data.Filename = Filename;
    Table_data = [Table_data(:,end), Table_data(:,1:end-1)];
    All_data = [All_data; Table_data];
    h
end
writetable(All_data,'F_1-3_INSPIRE_ROITelea_closing.csv');
